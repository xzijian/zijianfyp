{"ast":null,"code":"import React from 'react';\nimport cx from 'clsx';\nimport { ScrollArea } from '../../ScrollArea/ScrollArea.js';\nimport { Combobox } from '../Combobox.js';\nimport { defaultOptionsFilter } from './default-options-filter.js';\nimport { isEmptyComboboxData } from './is-empty-combobox-data.js';\nimport { isOptionsGroup } from './is-options-group.js';\nimport { validateOptions } from './validate-options.js';\nimport classes from '../Combobox.module.css.js';\nimport { CheckIcon } from '../../Checkbox/CheckIcon.js';\nfunction isValueChecked(value, optionValue) {\n  return Array.isArray(value) ? value.includes(optionValue) : value === optionValue;\n}\nfunction Option(_ref) {\n  let {\n    data,\n    withCheckIcon,\n    value,\n    checkIconPosition,\n    unstyled\n  } = _ref;\n  if (!isOptionsGroup(data)) {\n    const check = withCheckIcon && isValueChecked(value, data.value) && /* @__PURE__ */React.createElement(CheckIcon, {\n      className: classes.optionsDropdownCheckIcon\n    });\n    return /* @__PURE__ */React.createElement(Combobox.Option, {\n      value: data.value,\n      disabled: data.disabled,\n      className: cx({\n        [classes.optionsDropdownOption]: !unstyled\n      }),\n      \"data-reverse\": checkIconPosition === \"right\" || void 0,\n      \"data-checked\": isValueChecked(value, data.value) || void 0,\n      \"aria-selected\": isValueChecked(value, data.value)\n    }, checkIconPosition === \"left\" && check, data.label, checkIconPosition === \"right\" && check);\n  }\n  const options = data.items.map(item => /* @__PURE__ */React.createElement(Option, {\n    data: item,\n    key: item.value,\n    unstyled\n  }));\n  return /* @__PURE__ */React.createElement(Combobox.Group, {\n    label: data.group\n  }, options);\n}\nfunction OptionsDropdown(_ref2) {\n  let {\n    data,\n    hidden,\n    hiddenWhenEmpty,\n    filter,\n    search,\n    limit,\n    maxDropdownHeight,\n    withScrollArea = true,\n    filterOptions = true,\n    withCheckIcon = false,\n    value,\n    checkIconPosition,\n    nothingFoundMessage,\n    unstyled,\n    labelId\n  } = _ref2;\n  validateOptions(data);\n  const shouldFilter = typeof search === \"string\";\n  const filteredData = shouldFilter ? (filter || defaultOptionsFilter)({\n    options: data,\n    search: filterOptions ? search : \"\",\n    limit: limit != null ? limit : Infinity\n  }) : data;\n  const isEmpty = isEmptyComboboxData(filteredData);\n  const options = filteredData.map(item => /* @__PURE__ */React.createElement(Option, {\n    data: item,\n    key: isOptionsGroup(item) ? item.group : item.value,\n    withCheckIcon,\n    value,\n    checkIconPosition,\n    unstyled\n  }));\n  return /* @__PURE__ */React.createElement(Combobox.Dropdown, {\n    hidden: hidden || hiddenWhenEmpty && isEmpty\n  }, /* @__PURE__ */React.createElement(Combobox.Options, {\n    labelledBy: labelId\n  }, withScrollArea ? /* @__PURE__ */React.createElement(ScrollArea.Autosize, {\n    mah: maxDropdownHeight != null ? maxDropdownHeight : 220,\n    type: \"scroll\",\n    scrollbarSize: \"var(--_combobox-padding)\",\n    offsetScrollbars: \"y\",\n    className: classes.optionsDropdownScrollArea\n  }, options) : options, isEmpty && nothingFoundMessage && /* @__PURE__ */React.createElement(Combobox.Empty, null, nothingFoundMessage)));\n}\nexport { OptionsDropdown };","map":{"version":3,"names":["isValueChecked","value","optionValue","Array","isArray","includes","Option","_ref","data","withCheckIcon","checkIconPosition","unstyled","isOptionsGroup","check","React","createElement","CheckIcon","className","classes","optionsDropdownCheckIcon","Combobox","disabled","cx","optionsDropdownOption","label","options","items","map","item","key","Group","group","OptionsDropdown","_ref2","hidden","hiddenWhenEmpty","filter","search","limit","maxDropdownHeight","withScrollArea","filterOptions","nothingFoundMessage","labelId","validateOptions","shouldFilter","filteredData","defaultOptionsFilter","Infinity","isEmpty","isEmptyComboboxData","Dropdown","Options","labelledBy","ScrollArea","Autosize","mah","type","scrollbarSize","offsetScrollbars","optionsDropdownScrollArea","Empty"],"sources":["/Users/Zijian/Desktop/fypfull/client/node_modules/@mantine/core/src/components/Combobox/OptionsDropdown/OptionsDropdown.tsx"],"sourcesContent":["import React from 'react';\nimport cx from 'clsx';\nimport { ScrollArea } from '../../ScrollArea/ScrollArea';\nimport { CheckIcon } from '../../Checkbox';\nimport { Combobox } from '../Combobox';\nimport { ComboboxItem, ComboboxParsedItem } from '../Combobox.types';\nimport { defaultOptionsFilter, FilterOptionsInput } from './default-options-filter';\nimport { isEmptyComboboxData } from './is-empty-combobox-data';\nimport { isOptionsGroup } from './is-options-group';\nimport { validateOptions } from './validate-options';\nimport classes from '../Combobox.module.css';\n\nexport type OptionsFilter = (input: FilterOptionsInput) => ComboboxParsedItem[];\n\nexport interface OptionsGroup {\n  group: string;\n  items: ComboboxItem[];\n}\n\nexport type OptionsData = (ComboboxItem | OptionsGroup)[];\n\ninterface OptionProps {\n  data: ComboboxItem | OptionsGroup;\n  withCheckIcon?: boolean;\n  value?: string | string[] | null;\n  checkIconPosition?: 'left' | 'right';\n  unstyled: boolean | undefined;\n}\n\nfunction isValueChecked(value: string | string[] | undefined | null, optionValue: string) {\n  return Array.isArray(value) ? value.includes(optionValue) : value === optionValue;\n}\n\nfunction Option({ data, withCheckIcon, value, checkIconPosition, unstyled }: OptionProps) {\n  if (!isOptionsGroup(data)) {\n    const check = withCheckIcon && isValueChecked(value, data.value) && (\n      <CheckIcon className={classes.optionsDropdownCheckIcon} />\n    );\n    return (\n      <Combobox.Option\n        value={data.value}\n        disabled={data.disabled}\n        className={cx({ [classes.optionsDropdownOption]: !unstyled })}\n        data-reverse={checkIconPosition === 'right' || undefined}\n        data-checked={isValueChecked(value, data.value) || undefined}\n        aria-selected={isValueChecked(value, data.value)}\n      >\n        {checkIconPosition === 'left' && check}\n        {data.label}\n        {checkIconPosition === 'right' && check}\n      </Combobox.Option>\n    );\n  }\n\n  const options = data.items.map((item) => (\n    <Option data={item} key={item.value} unstyled={unstyled} />\n  ));\n\n  return <Combobox.Group label={data.group}>{options}</Combobox.Group>;\n}\n\nexport interface OptionsDropdownProps {\n  data: OptionsData;\n  filter: OptionsFilter | undefined;\n  search: string | undefined;\n  limit: number | undefined;\n  withScrollArea: boolean | undefined;\n  maxDropdownHeight: number | string | undefined;\n  hidden?: boolean;\n  hiddenWhenEmpty?: boolean;\n  filterOptions?: boolean;\n  withCheckIcon?: boolean;\n  value?: string | string[] | null;\n  checkIconPosition?: 'left' | 'right';\n  nothingFoundMessage?: React.ReactNode;\n  unstyled: boolean | undefined;\n  labelId: string;\n}\n\nexport function OptionsDropdown({\n  data,\n  hidden,\n  hiddenWhenEmpty,\n  filter,\n  search,\n  limit,\n  maxDropdownHeight,\n  withScrollArea = true,\n  filterOptions = true,\n  withCheckIcon = false,\n  value,\n  checkIconPosition,\n  nothingFoundMessage,\n  unstyled,\n  labelId,\n}: OptionsDropdownProps) {\n  validateOptions(data);\n\n  const shouldFilter = typeof search === 'string';\n  const filteredData = shouldFilter\n    ? (filter || defaultOptionsFilter)({\n        options: data,\n        search: filterOptions ? search : '',\n        limit: limit ?? Infinity,\n      })\n    : data;\n  const isEmpty = isEmptyComboboxData(filteredData);\n\n  const options = filteredData.map((item) => (\n    <Option\n      data={item}\n      key={isOptionsGroup(item) ? item.group : item.value}\n      withCheckIcon={withCheckIcon}\n      value={value}\n      checkIconPosition={checkIconPosition}\n      unstyled={unstyled}\n    />\n  ));\n\n  return (\n    <Combobox.Dropdown hidden={hidden || (hiddenWhenEmpty && isEmpty)}>\n      <Combobox.Options labelledBy={labelId}>\n        {withScrollArea ? (\n          <ScrollArea.Autosize\n            mah={maxDropdownHeight ?? 220}\n            type=\"scroll\"\n            scrollbarSize=\"var(--_combobox-padding)\"\n            offsetScrollbars=\"y\"\n            className={classes.optionsDropdownScrollArea}\n          >\n            {options}\n          </ScrollArea.Autosize>\n        ) : (\n          options\n        )}\n        {isEmpty && nothingFoundMessage && <Combobox.Empty>{nothingFoundMessage}</Combobox.Empty>}\n      </Combobox.Options>\n    </Combobox.Dropdown>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}