{"ast":null,"code":"import React from 'react';\nimport { useId, useUncontrolled } from '@mantine/hooks';\nimport { getSplittedTags } from './get-splitted-tags.js';\nimport { filterPickedTags } from './filter-picked-tags.js';\nimport { getParsedComboboxData } from '../Combobox/get-parsed-combobox-data/get-parsed-combobox-data.js';\nimport { getOptionsLockup } from '../Combobox/get-options-lockup/get-options-lockup.js';\nimport { useCombobox } from '../Combobox/use-combobox/use-combobox.js';\nimport { Pill } from '../Pill/Pill.js';\nimport { Combobox } from '../Combobox/Combobox.js';\nimport { PillsInput } from '../PillsInput/PillsInput.js';\nimport { OptionsDropdown } from '../Combobox/OptionsDropdown/OptionsDropdown.js';\nimport { InputBase } from '../InputBase/InputBase.js';\nimport { factory } from '../../core/factory/factory.js';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.js';\nimport { extractStyleProps } from '../../core/Box/style-props/extract-style-props/extract-style-props.js';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.js';\nimport { useResolvedStylesApi } from '../../core/styles-api/use-resolved-styles-api/use-resolved-styles-api.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst defaultProps = {\n  maxTags: Infinity,\n  allowDuplicates: false,\n  splitChars: [\",\"]\n};\nconst TagsInput = factory((_props, ref) => {\n  const props = useProps(\"TagsInput\", defaultProps, _props);\n  const _a = props,\n    {\n      classNames,\n      className,\n      style,\n      styles,\n      unstyled,\n      vars,\n      size,\n      value,\n      defaultValue,\n      onChange,\n      onKeyDown,\n      maxTags,\n      allowDuplicates,\n      onDuplicate,\n      variant,\n      data,\n      dropdownOpened,\n      defaultDropdownOpened,\n      onDropdownOpen,\n      onDropdownClose,\n      selectFirstOptionOnChange,\n      onOptionSubmit,\n      comboboxProps,\n      filter,\n      limit,\n      withScrollArea,\n      maxDropdownHeight,\n      searchValue,\n      defaultSearchValue,\n      onSearchChange,\n      readOnly,\n      disabled,\n      splitChars,\n      onFocus,\n      onBlur,\n      onPaste,\n      radius,\n      rightSection,\n      rightSectionWidth,\n      rightSectionPointerEvents,\n      rightSectionProps,\n      leftSection,\n      leftSectionWidth,\n      leftSectionPointerEvents,\n      leftSectionProps,\n      inputContainer,\n      inputWrapperOrder,\n      withAsterisk,\n      labelProps,\n      descriptionProps,\n      errorProps,\n      wrapperProps,\n      description,\n      label,\n      error,\n      withErrorStyles,\n      name,\n      form,\n      id\n    } = _a,\n    others = __objRest(_a, [\"classNames\", \"className\", \"style\", \"styles\", \"unstyled\", \"vars\", \"size\", \"value\", \"defaultValue\", \"onChange\", \"onKeyDown\", \"maxTags\", \"allowDuplicates\", \"onDuplicate\", \"variant\", \"data\", \"dropdownOpened\", \"defaultDropdownOpened\", \"onDropdownOpen\", \"onDropdownClose\", \"selectFirstOptionOnChange\", \"onOptionSubmit\", \"comboboxProps\", \"filter\", \"limit\", \"withScrollArea\", \"maxDropdownHeight\", \"searchValue\", \"defaultSearchValue\", \"onSearchChange\", \"readOnly\", \"disabled\", \"splitChars\", \"onFocus\", \"onBlur\", \"onPaste\", \"radius\", \"rightSection\", \"rightSectionWidth\", \"rightSectionPointerEvents\", \"rightSectionProps\", \"leftSection\", \"leftSectionWidth\", \"leftSectionPointerEvents\", \"leftSectionProps\", \"inputContainer\", \"inputWrapperOrder\", \"withAsterisk\", \"labelProps\", \"descriptionProps\", \"errorProps\", \"wrapperProps\", \"description\", \"label\", \"error\", \"withErrorStyles\", \"name\", \"form\", \"id\"]);\n  const _id = useId(id);\n  const parsedData = getParsedComboboxData(data);\n  const optionsLockup = getOptionsLockup(parsedData);\n  const combobox = useCombobox({\n    opened: dropdownOpened,\n    defaultOpened: defaultDropdownOpened,\n    onDropdownOpen,\n    onDropdownClose: () => {\n      onDropdownClose == null ? void 0 : onDropdownClose();\n      combobox.resetSelectedOption();\n    }\n  });\n  const {\n      styleProps,\n      rest: _b\n    } = extractStyleProps(others),\n    _c = _b,\n    rest = __objRest(_c, [\"type\"]);\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: [],\n    onChange\n  });\n  const [_searchValue, setSearchValue] = useUncontrolled({\n    value: searchValue,\n    defaultValue: defaultSearchValue,\n    finalValue: \"\",\n    onChange: onSearchChange\n  });\n  const getStyles = useStyles({\n    name: \"TagsInput\",\n    classes: {},\n    props,\n    classNames,\n    styles,\n    unstyled\n  });\n  const {\n    resolvedClassNames,\n    resolvedStyles\n  } = useResolvedStylesApi({\n    props,\n    styles,\n    classNames\n  });\n  const handleInputKeydown = event => {\n    onKeyDown == null ? void 0 : onKeyDown(event);\n    const inputValue = _searchValue.trim();\n    const {\n      length\n    } = inputValue;\n    if (splitChars.includes(event.key) && length > 0) {\n      setValue(getSplittedTags({\n        splitChars,\n        allowDuplicates,\n        maxTags,\n        value: _searchValue,\n        currentTags: _value\n      }));\n      setSearchValue(\"\");\n      event.preventDefault();\n    }\n    if (event.key === \"Enter\" && length > 0) {\n      event.preventDefault();\n      const isDuplicate = _value.some(tag => tag.toLowerCase() === inputValue.toLowerCase());\n      if (isDuplicate) {\n        onDuplicate == null ? void 0 : onDuplicate(inputValue);\n      }\n      if ((!isDuplicate || isDuplicate && allowDuplicates) && _value.length < maxTags) {\n        setSearchValue(\"\");\n        if (inputValue.length > 0) {\n          setValue([..._value, inputValue]);\n        }\n      }\n    }\n    if (event.key === \"Backspace\" && length === 0 && _value.length > 0) {\n      setValue(_value.slice(0, _value.length - 1));\n    }\n  };\n  const handlePaste = event => {\n    onPaste == null ? void 0 : onPaste(event);\n    event.preventDefault();\n    if (event.clipboardData) {\n      const pastedText = event.clipboardData.getData(\"text/plain\");\n      setValue(getSplittedTags({\n        splitChars,\n        allowDuplicates,\n        maxTags,\n        value: pastedText,\n        currentTags: _value\n      }));\n      setSearchValue(\"\");\n    }\n  };\n  const values = _value.map((item, index) => /* @__PURE__ */React.createElement(Pill, __spreadValues({\n    key: `${item}-${index}`,\n    withRemoveButton: !readOnly,\n    onRemove: () => setValue(_value.filter(i => item !== i)),\n    unstyled\n  }, getStyles(\"pill\")), item));\n  return /* @__PURE__ */React.createElement(React.Fragment, null, /* @__PURE__ */React.createElement(Combobox, __spreadValues({\n    store: combobox,\n    classNames: resolvedClassNames,\n    styles: resolvedStyles,\n    unstyled,\n    size,\n    readOnly,\n    __staticSelector: \"TagsInput\",\n    onOptionSubmit: val => {\n      onOptionSubmit == null ? void 0 : onOptionSubmit(val);\n      setSearchValue(\"\");\n      _value.length < maxTags && setValue([..._value, optionsLockup[val].label]);\n    }\n  }, comboboxProps), /* @__PURE__ */React.createElement(Combobox.DropdownTarget, null, /* @__PURE__ */React.createElement(PillsInput, __spreadProps(__spreadValues({}, styleProps), {\n    __staticSelector: \"TagsInput\",\n    classNames: resolvedClassNames,\n    styles: resolvedStyles,\n    unstyled,\n    size,\n    className,\n    style,\n    variant,\n    disabled,\n    radius,\n    rightSection,\n    rightSectionWidth,\n    rightSectionPointerEvents,\n    rightSectionProps,\n    leftSection,\n    leftSectionWidth,\n    leftSectionPointerEvents,\n    leftSectionProps,\n    inputContainer,\n    inputWrapperOrder,\n    withAsterisk,\n    labelProps,\n    descriptionProps,\n    errorProps,\n    wrapperProps,\n    description,\n    label,\n    error,\n    multiline: true,\n    withErrorStyles,\n    __stylesApiProps: __spreadProps(__spreadValues({}, props), {\n      multiline: true\n    }),\n    id: _id\n  }), /* @__PURE__ */React.createElement(Pill.Group, __spreadValues({\n    disabled,\n    unstyled\n  }, getStyles(\"pillsList\")), values, /* @__PURE__ */React.createElement(Combobox.EventsTarget, null, /* @__PURE__ */React.createElement(PillsInput.Field, __spreadProps(__spreadValues(__spreadProps(__spreadValues({}, rest), {\n    ref\n  }), getStyles(\"inputField\")), {\n    unstyled,\n    onKeyDown: handleInputKeydown,\n    onFocus: event => {\n      onFocus == null ? void 0 : onFocus(event);\n      combobox.openDropdown();\n    },\n    onBlur: event => {\n      onBlur == null ? void 0 : onBlur(event);\n      combobox.closeDropdown();\n    },\n    onPaste: handlePaste,\n    value: _searchValue,\n    onChange: event => setSearchValue(event.currentTarget.value),\n    disabled,\n    readOnly,\n    id: _id\n  })))))), /* @__PURE__ */React.createElement(OptionsDropdown, {\n    data: filterPickedTags({\n      data: parsedData,\n      value: _value\n    }),\n    hidden: readOnly || disabled,\n    filter,\n    search: _searchValue,\n    limit,\n    hiddenWhenEmpty: true,\n    withScrollArea,\n    maxDropdownHeight,\n    unstyled,\n    labelId: `${_id}-label`\n  })), /* @__PURE__ */React.createElement(\"input\", {\n    type: \"hidden\",\n    name,\n    form,\n    value: _value.join(\",\"),\n    disabled\n  }));\n});\nTagsInput.classes = __spreadValues(__spreadValues({}, InputBase.classes), Combobox.classes);\nTagsInput.displayName = \"@mantine/core/TagsInput\";\nexport { TagsInput };","map":{"version":3,"names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","__objRest","source","exclude","target","indexOf","defaultProps","maxTags","Infinity","allowDuplicates","splitChars","TagsInput","factory","_props","ref","props","useProps","_a","classNames","className","style","styles","unstyled","vars","size","defaultValue","onChange","onKeyDown","onDuplicate","variant","data","dropdownOpened","defaultDropdownOpened","onDropdownOpen","onDropdownClose","selectFirstOptionOnChange","onOptionSubmit","comboboxProps","filter","limit","withScrollArea","maxDropdownHeight","searchValue","defaultSearchValue","onSearchChange","readOnly","disabled","onFocus","onBlur","onPaste","radius","rightSection","rightSectionWidth","rightSectionPointerEvents","rightSectionProps","leftSection","leftSectionWidth","leftSectionPointerEvents","leftSectionProps","inputContainer","inputWrapperOrder","withAsterisk","labelProps","descriptionProps","errorProps","wrapperProps","description","label","error","withErrorStyles","name","form","id","others","_id","useId","parsedData","getParsedComboboxData","optionsLockup","getOptionsLockup","combobox","useCombobox","opened","defaultOpened","resetSelectedOption","styleProps","rest","_b","extractStyleProps","_c","_value","setValue","useUncontrolled","finalValue","_searchValue","setSearchValue","getStyles","useStyles","classes","resolvedClassNames","resolvedStyles","useResolvedStylesApi","handleInputKeydown","event","inputValue","trim","length","includes","getSplittedTags","currentTags","preventDefault","isDuplicate","some","tag","toLowerCase","slice","handlePaste","clipboardData","pastedText","getData","values","map","item","index","React","createElement","Pill","withRemoveButton","onRemove","i","Fragment","Combobox","store","__staticSelector","val","DropdownTarget","PillsInput","multiline","__stylesApiProps","Group","EventsTarget","Field","openDropdown","closeDropdown","currentTarget","OptionsDropdown","filterPickedTags","hidden","search","hiddenWhenEmpty","labelId","type","join","InputBase","displayName"],"sources":["/Users/Zijian/Desktop/fypfull/client/node_modules/@mantine/core/src/components/TagsInput/TagsInput.tsx"],"sourcesContent":["import React from 'react';\nimport { useUncontrolled, useId } from '@mantine/hooks';\nimport {\n  BoxProps,\n  StylesApiProps,\n  factory,\n  ElementProps,\n  useProps,\n  Factory,\n  extractStyleProps,\n  useStyles,\n  useResolvedStylesApi,\n} from '../../core';\nimport {\n  Combobox,\n  OptionsDropdown,\n  useCombobox,\n  getParsedComboboxData,\n  getOptionsLockup,\n  ComboboxLikeProps,\n  ComboboxLikeStylesNames,\n} from '../Combobox';\nimport { __BaseInputProps, __InputStylesNames } from '../Input';\nimport { PillsInput } from '../PillsInput';\nimport { Pill } from '../Pill';\nimport { InputBase } from '../InputBase';\nimport { getSplittedTags } from './get-splitted-tags';\nimport { filterPickedTags } from './filter-picked-tags';\n\nexport type TagsInputStylesNames =\n  | __InputStylesNames\n  | ComboboxLikeStylesNames\n  | 'pill'\n  | 'pillsList'\n  | 'inputField';\n\nexport interface TagsInputProps\n  extends BoxProps,\n    __BaseInputProps,\n    ComboboxLikeProps,\n    StylesApiProps<TagsInputFactory>,\n    ElementProps<'input', 'size' | 'value' | 'defaultValue' | 'onChange'> {\n  /** Controlled component value */\n  value?: string[];\n\n  /** Default value for uncontrolled component */\n  defaultValue?: string[];\n\n  /** Called whe value changes */\n  onChange?(value: string[]): void;\n\n  /** Controlled search value */\n  searchValue?: string;\n\n  /** Default search value */\n  defaultSearchValue?: string;\n\n  /** Called when search changes */\n  onSearchChange?(value: string): void;\n\n  /** Maximum number of tags, `Infinity` by default */\n  maxTags?: number;\n\n  /** Determines whether duplicate tags are allowed, `false` by default */\n  allowDuplicates?: boolean;\n\n  /** Called when user tries to submit a duplicated tag */\n  onDuplicate?(value: string): void;\n\n  /** Characters that should trigger tags split, `[',']` by default */\n  splitChars?: string[];\n}\n\nexport type TagsInputFactory = Factory<{\n  props: TagsInputProps;\n  ref: HTMLInputElement;\n  stylesNames: TagsInputStylesNames;\n}>;\n\nconst defaultProps: Partial<TagsInputProps> = {\n  maxTags: Infinity,\n  allowDuplicates: false,\n  splitChars: [','],\n};\n\nexport const TagsInput = factory<TagsInputFactory>((_props, ref) => {\n  const props = useProps('TagsInput', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    size,\n    value,\n    defaultValue,\n    onChange,\n    onKeyDown,\n    maxTags,\n    allowDuplicates,\n    onDuplicate,\n    variant,\n    data,\n    dropdownOpened,\n    defaultDropdownOpened,\n    onDropdownOpen,\n    onDropdownClose,\n    selectFirstOptionOnChange,\n    onOptionSubmit,\n    comboboxProps,\n    filter,\n    limit,\n    withScrollArea,\n    maxDropdownHeight,\n    searchValue,\n    defaultSearchValue,\n    onSearchChange,\n    readOnly,\n    disabled,\n    splitChars,\n    onFocus,\n    onBlur,\n    onPaste,\n    radius,\n    rightSection,\n    rightSectionWidth,\n    rightSectionPointerEvents,\n    rightSectionProps,\n    leftSection,\n    leftSectionWidth,\n    leftSectionPointerEvents,\n    leftSectionProps,\n    inputContainer,\n    inputWrapperOrder,\n    withAsterisk,\n    labelProps,\n    descriptionProps,\n    errorProps,\n    wrapperProps,\n    description,\n    label,\n    error,\n    withErrorStyles,\n    name,\n    form,\n    id,\n    ...others\n  } = props;\n\n  const _id = useId(id);\n  const parsedData = getParsedComboboxData(data);\n  const optionsLockup = getOptionsLockup(parsedData);\n\n  const combobox = useCombobox({\n    opened: dropdownOpened,\n    defaultOpened: defaultDropdownOpened,\n    onDropdownOpen,\n    onDropdownClose: () => {\n      onDropdownClose?.();\n      combobox.resetSelectedOption();\n    },\n  });\n\n  const {\n    styleProps,\n    rest: { type, ...rest },\n  } = extractStyleProps(others);\n\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: [],\n    onChange,\n  });\n\n  const [_searchValue, setSearchValue] = useUncontrolled({\n    value: searchValue,\n    defaultValue: defaultSearchValue,\n    finalValue: '',\n    onChange: onSearchChange,\n  });\n\n  const getStyles = useStyles<TagsInputFactory>({\n    name: 'TagsInput',\n    classes: {} as any,\n    props,\n    classNames,\n    styles,\n    unstyled,\n  });\n\n  const { resolvedClassNames, resolvedStyles } = useResolvedStylesApi<TagsInputFactory>({\n    props,\n    styles,\n    classNames,\n  });\n\n  const handleInputKeydown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    onKeyDown?.(event);\n\n    const inputValue = _searchValue.trim();\n    const { length } = inputValue;\n\n    if (splitChars!.includes(event.key) && length > 0) {\n      setValue(\n        getSplittedTags({\n          splitChars,\n          allowDuplicates,\n          maxTags,\n          value: _searchValue,\n          currentTags: _value,\n        })\n      );\n      setSearchValue('');\n      event.preventDefault();\n    }\n\n    if (event.key === 'Enter' && length > 0) {\n      event.preventDefault();\n      const isDuplicate = _value.some((tag) => tag.toLowerCase() === inputValue.toLowerCase());\n\n      if (isDuplicate) {\n        onDuplicate?.(inputValue);\n      }\n\n      if ((!isDuplicate || (isDuplicate && allowDuplicates)) && _value.length < maxTags!) {\n        setSearchValue('');\n\n        if (inputValue.length > 0) {\n          setValue([..._value, inputValue]);\n        }\n      }\n    }\n\n    if (event.key === 'Backspace' && length === 0 && _value.length > 0) {\n      setValue(_value.slice(0, _value.length - 1));\n    }\n  };\n\n  const handlePaste = (event: React.ClipboardEvent<HTMLInputElement>) => {\n    onPaste?.(event);\n    event.preventDefault();\n\n    if (event.clipboardData) {\n      const pastedText = event.clipboardData.getData('text/plain');\n      setValue(\n        getSplittedTags({\n          splitChars,\n          allowDuplicates,\n          maxTags,\n          value: pastedText,\n          currentTags: _value,\n        })\n      );\n      setSearchValue('');\n    }\n  };\n\n  const values = _value.map((item, index) => (\n    <Pill\n      key={`${item}-${index}`}\n      withRemoveButton={!readOnly}\n      onRemove={() => setValue(_value.filter((i) => item !== i))}\n      unstyled={unstyled}\n      {...getStyles('pill')}\n    >\n      {item}\n    </Pill>\n  ));\n\n  return (\n    <>\n      <Combobox\n        store={combobox}\n        classNames={resolvedClassNames}\n        styles={resolvedStyles}\n        unstyled={unstyled}\n        size={size}\n        readOnly={readOnly}\n        __staticSelector=\"TagsInput\"\n        onOptionSubmit={(val) => {\n          onOptionSubmit?.(val);\n          setSearchValue('');\n          _value.length < maxTags! && setValue([..._value, optionsLockup[val].label]);\n        }}\n        {...comboboxProps}\n      >\n        <Combobox.DropdownTarget>\n          <PillsInput\n            {...styleProps}\n            __staticSelector=\"TagsInput\"\n            classNames={resolvedClassNames}\n            styles={resolvedStyles}\n            unstyled={unstyled}\n            size={size}\n            className={className}\n            style={style}\n            variant={variant}\n            disabled={disabled}\n            radius={radius}\n            rightSection={rightSection}\n            rightSectionWidth={rightSectionWidth}\n            rightSectionPointerEvents={rightSectionPointerEvents}\n            rightSectionProps={rightSectionProps}\n            leftSection={leftSection}\n            leftSectionWidth={leftSectionWidth}\n            leftSectionPointerEvents={leftSectionPointerEvents}\n            leftSectionProps={leftSectionProps}\n            inputContainer={inputContainer}\n            inputWrapperOrder={inputWrapperOrder}\n            withAsterisk={withAsterisk}\n            labelProps={labelProps}\n            descriptionProps={descriptionProps}\n            errorProps={errorProps}\n            wrapperProps={wrapperProps}\n            description={description}\n            label={label}\n            error={error}\n            multiline\n            withErrorStyles={withErrorStyles}\n            __stylesApiProps={{ ...props, multiline: true }}\n            id={_id}\n          >\n            <Pill.Group disabled={disabled} unstyled={unstyled} {...getStyles('pillsList')}>\n              {values}\n              <Combobox.EventsTarget>\n                <PillsInput.Field\n                  {...rest}\n                  ref={ref}\n                  {...getStyles('inputField')}\n                  unstyled={unstyled}\n                  onKeyDown={handleInputKeydown}\n                  onFocus={(event) => {\n                    onFocus?.(event);\n                    combobox.openDropdown();\n                  }}\n                  onBlur={(event) => {\n                    onBlur?.(event);\n                    combobox.closeDropdown();\n                  }}\n                  onPaste={handlePaste}\n                  value={_searchValue}\n                  onChange={(event) => setSearchValue(event.currentTarget.value)}\n                  disabled={disabled}\n                  readOnly={readOnly}\n                  id={_id}\n                />\n              </Combobox.EventsTarget>\n            </Pill.Group>\n          </PillsInput>\n        </Combobox.DropdownTarget>\n\n        <OptionsDropdown\n          data={filterPickedTags({ data: parsedData, value: _value })}\n          hidden={readOnly || disabled}\n          filter={filter}\n          search={_searchValue}\n          limit={limit}\n          hiddenWhenEmpty\n          withScrollArea={withScrollArea}\n          maxDropdownHeight={maxDropdownHeight}\n          unstyled={unstyled}\n          labelId={`${_id}-label`}\n        />\n      </Combobox>\n      <input type=\"hidden\" name={name} form={form} value={_value.join(',')} disabled={disabled} />\n    </>\n  );\n});\n\nTagsInput.classes = { ...InputBase.classes, ...Combobox.classes };\nTagsInput.displayName = '@mantine/core/TagsInput';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}