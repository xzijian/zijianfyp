{"ast":null,"code":"import React, { forwardRef, useState, useRef } from 'react';\nimport { useMove, useDidUpdate, useMergedRef, clampUseMovePosition } from '@mantine/hooks';\nimport { Thumb } from '../Thumb/Thumb.js';\nimport { useColorPickerContext } from '../ColorPicker.context.js';\nimport { useMantineTheme } from '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.js';\nimport { Box } from '../../../core/Box/Box.js';\nimport { rem } from '../../../core/utils/units-converters/rem.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst ColorSlider = forwardRef((props, ref) => {\n  const _a = props,\n    {\n      className,\n      onChange,\n      onChangeEnd,\n      maxValue,\n      round,\n      size = \"md\",\n      focusable = true,\n      value,\n      overlays,\n      thumbColor = \"transparent\",\n      onScrubStart,\n      onScrubEnd\n    } = _a,\n    others = __objRest(_a, [\"className\", \"onChange\", \"onChangeEnd\", \"maxValue\", \"round\", \"size\", \"focusable\", \"value\", \"overlays\", \"thumbColor\", \"onScrubStart\", \"onScrubEnd\"]);\n  const {\n    getStyles\n  } = useColorPickerContext();\n  const theme = useMantineTheme();\n  const [position, setPosition] = useState({\n    y: 0,\n    x: value / maxValue\n  });\n  const positionRef = useRef(position);\n  const getChangeValue = val => round ? Math.round(val * maxValue) : val * maxValue;\n  const {\n    ref: sliderRef\n  } = useMove(_ref => {\n    let {\n      x,\n      y\n    } = _ref;\n    positionRef.current = {\n      x,\n      y\n    };\n    onChange == null ? void 0 : onChange(getChangeValue(x));\n  }, {\n    onScrubEnd: () => {\n      const {\n        x\n      } = positionRef.current;\n      onChangeEnd == null ? void 0 : onChangeEnd(getChangeValue(x));\n      onScrubEnd == null ? void 0 : onScrubEnd();\n    },\n    onScrubStart\n  });\n  useDidUpdate(() => {\n    setPosition({\n      y: 0,\n      x: value / maxValue\n    });\n  }, [value]);\n  const handleArrow = (event, pos) => {\n    event.preventDefault();\n    const _position = clampUseMovePosition(pos);\n    onChange == null ? void 0 : onChange(getChangeValue(_position.x));\n    onChangeEnd == null ? void 0 : onChangeEnd(getChangeValue(_position.x));\n  };\n  const handleKeyDown = event => {\n    switch (event.key) {\n      case \"ArrowRight\":\n        {\n          handleArrow(event, {\n            x: position.x + 0.05,\n            y: position.y\n          });\n          break;\n        }\n      case \"ArrowLeft\":\n        {\n          handleArrow(event, {\n            x: position.x - 0.05,\n            y: position.y\n          });\n          break;\n        }\n    }\n  };\n  const layers = overlays.map((overlay, index) => /* @__PURE__ */React.createElement(\"div\", __spreadProps(__spreadValues({}, getStyles(\"sliderOverlay\")), {\n    style: overlay,\n    key: index\n  })));\n  return /* @__PURE__ */React.createElement(Box, __spreadProps(__spreadValues(__spreadProps(__spreadValues({}, others), {\n    ref: useMergedRef(sliderRef, ref)\n  }), getStyles(\"slider\")), {\n    role: \"slider\",\n    \"aria-valuenow\": value,\n    \"aria-valuemax\": maxValue,\n    \"aria-valuemin\": 0,\n    tabIndex: focusable ? 0 : -1,\n    onKeyDown: handleKeyDown,\n    \"data-focus-ring\": theme.focusRing\n  }), layers, /* @__PURE__ */React.createElement(Thumb, __spreadValues({\n    position,\n    size\n  }, getStyles(\"thumb\", {\n    style: {\n      top: rem(1),\n      background: thumbColor\n    }\n  }))));\n});\nColorSlider.displayName = \"@mantine/core/ColorSlider\";\nexport { ColorSlider };","map":{"version":3,"names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","__objRest","source","exclude","target","indexOf","ColorSlider","forwardRef","props","ref","_a","className","onChange","onChangeEnd","maxValue","round","size","focusable","overlays","thumbColor","onScrubStart","onScrubEnd","others","getStyles","useColorPickerContext","theme","useMantineTheme","position","setPosition","useState","y","x","positionRef","useRef","getChangeValue","val","Math","sliderRef","useMove","_ref","current","useDidUpdate","handleArrow","event","pos","preventDefault","_position","clampUseMovePosition","handleKeyDown","layers","map","overlay","index","React","createElement","style","Box","useMergedRef","role","tabIndex","onKeyDown","focusRing","Thumb","top","rem","background","displayName"],"sources":["/Users/Zijian/Desktop/fypfull/client/node_modules/@mantine/core/src/components/ColorPicker/ColorSlider/ColorSlider.tsx"],"sourcesContent":["import React, { useRef, useState, forwardRef } from 'react';\nimport {\n  UseMovePosition,\n  clampUseMovePosition,\n  useDidUpdate,\n  useMergedRef,\n  useMove,\n} from '@mantine/hooks';\nimport { Box, ElementProps, MantineSize, useMantineTheme, rem } from '../../../core';\nimport { Thumb } from '../Thumb/Thumb';\nimport { useColorPickerContext } from '../ColorPicker.context';\n\nexport interface __ColorSliderProps extends ElementProps<'div', 'onChange'> {\n  value: number;\n  onChange?(value: number): void;\n  onChangeEnd?(value: number): void;\n  onScrubStart?(): void;\n  onScrubEnd?(): void;\n  size?: MantineSize | (string & {});\n  focusable?: boolean;\n}\n\nexport interface ColorSliderProps extends __ColorSliderProps {\n  maxValue: number;\n  overlays: React.CSSProperties[];\n  round: boolean;\n  thumbColor?: string;\n}\n\nexport const ColorSlider = forwardRef<HTMLDivElement, ColorSliderProps>((props, ref) => {\n  const {\n    className,\n    onChange,\n    onChangeEnd,\n    maxValue,\n    round,\n    size = 'md',\n    focusable = true,\n    value,\n    overlays,\n    thumbColor = 'transparent',\n    onScrubStart,\n    onScrubEnd,\n    ...others\n  } = props;\n\n  const { getStyles } = useColorPickerContext();\n\n  const theme = useMantineTheme();\n  const [position, setPosition] = useState({ y: 0, x: value / maxValue });\n  const positionRef = useRef(position);\n  const getChangeValue = (val: number) => (round ? Math.round(val * maxValue) : val * maxValue);\n  const { ref: sliderRef } = useMove(\n    ({ x, y }) => {\n      positionRef.current = { x, y };\n      onChange?.(getChangeValue(x));\n    },\n    {\n      onScrubEnd: () => {\n        const { x } = positionRef.current;\n        onChangeEnd?.(getChangeValue(x));\n        onScrubEnd?.();\n      },\n      onScrubStart,\n    }\n  );\n\n  useDidUpdate(() => {\n    setPosition({ y: 0, x: value / maxValue });\n  }, [value]);\n\n  const handleArrow = (event: React.KeyboardEvent<HTMLDivElement>, pos: UseMovePosition) => {\n    event.preventDefault();\n    const _position = clampUseMovePosition(pos);\n    onChange?.(getChangeValue(_position.x));\n    onChangeEnd?.(getChangeValue(_position.x));\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    switch (event.key) {\n      case 'ArrowRight': {\n        handleArrow(event, { x: position.x + 0.05, y: position.y });\n        break;\n      }\n\n      case 'ArrowLeft': {\n        handleArrow(event, { x: position.x - 0.05, y: position.y });\n        break;\n      }\n    }\n  };\n\n  const layers = overlays.map((overlay, index) => (\n    <div {...getStyles('sliderOverlay')} style={overlay} key={index} />\n  ));\n\n  return (\n    <Box\n      {...others}\n      ref={useMergedRef(sliderRef, ref)}\n      {...getStyles('slider')}\n      role=\"slider\"\n      aria-valuenow={value}\n      aria-valuemax={maxValue}\n      aria-valuemin={0}\n      tabIndex={focusable ? 0 : -1}\n      onKeyDown={handleKeyDown}\n      data-focus-ring={theme.focusRing}\n    >\n      {layers}\n\n      <Thumb\n        position={position}\n        size={size!}\n        {...getStyles('thumb', { style: { top: rem(1), background: thumbColor } })}\n      />\n    </Box>\n  );\n});\n\nColorSlider.displayName = '@mantine/core/ColorSlider';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}