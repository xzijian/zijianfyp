{"ast":null,"code":"import React, { createContext, useContext } from 'react';\nfunction createOptionalContext() {\n  let initialValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  const Context = createContext(initialValue);\n  const useOptionalContext = () => useContext(Context);\n  const Provider = _ref => {\n    let {\n      children,\n      value\n    } = _ref;\n    return /* @__PURE__ */React.createElement(Context.Provider, {\n      value\n    }, children);\n  };\n  return [Provider, useOptionalContext];\n}\nexport { createOptionalContext };","map":{"version":3,"names":["createOptionalContext","initialValue","arguments","length","undefined","Context","createContext","useOptionalContext","useContext","Provider","_ref","children","value","React","createElement"],"sources":["/Users/Zijian/Desktop/fypfull/client/node_modules/@mantine/core/src/core/utils/create-optional-context/create-optional-context.tsx"],"sourcesContent":["import React, { createContext, useContext } from 'react';\n\nexport function createOptionalContext<ContextValue>(initialValue: ContextValue | null = null) {\n  const Context = createContext<ContextValue | null>(initialValue);\n\n  const useOptionalContext = () => useContext(Context);\n\n  const Provider = ({ children, value }: { value: ContextValue; children: React.ReactNode }) => (\n    <Context.Provider value={value}>{children}</Context.Provider>\n  );\n\n  return [Provider, useOptionalContext] as const;\n}\n"],"mappings":";AACO,SAASA,qBAAqBA,CAAA,EAAsB;EAAA,IAArBC,YAAY,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EACvD,MAAMG,OAAO,GAAGC,aAAa,CAACL,YAAY,CAAC;EAC3C,MAAMM,kBAAkB,GAAGA,CAAA,KAAMC,UAAU,CAACH,OAAO,CAAC;EACpD,MAAMI,QAAQ,GAAGC,IAAA;IAAA,IAAC;MAAEC,QAAQ;MAAEC;IAAK,CAAE,GAAAF,IAAA;IAAA,sBAAqBG,KAAK,CAACC,aAAa,CAACT,OAAO,CAACI,QAAQ,EAAE;MAAEG;IAAK,CAAE,EAAED,QAAQ,CAAC;EAAA;EACpH,OAAO,CAACF,QAAQ,EAAEF,kBAAkB,CAAC;AACvC"},"metadata":{},"sourceType":"module","externalDependencies":[]}