{"ast":null,"code":"import { isResponsiveSize } from '../is-responsive-size/is-responsive-size.js';\nimport { isPrimitiveSize } from '../is-primitive-size/is-primitive-size.js';\nimport { getBaseSize } from '../get-base-size/get-base-size.js';\nimport { rem } from '../../../../core/utils/units-converters/rem.js';\nimport { keys } from '../../../../core/utils/keys/keys.js';\nfunction assignHeaderVariables(_ref) {\n  let {\n    baseStyles,\n    minMediaStyles,\n    header\n  } = _ref;\n  var _a;\n  const headerHeight = header == null ? void 0 : header.height;\n  const collapsedHeaderTransform = \"translateY(calc(var(--app-shell-header-height) * -1))\";\n  const shouldOffset = (_a = header == null ? void 0 : header.offset) != null ? _a : true;\n  if (isPrimitiveSize(headerHeight)) {\n    const baseSize = rem(getBaseSize(headerHeight));\n    baseStyles[\"--app-shell-header-height\"] = baseSize;\n    if (shouldOffset) {\n      baseStyles[\"--app-shell-header-offset\"] = baseSize;\n    }\n  }\n  if (isResponsiveSize(headerHeight)) {\n    if (typeof headerHeight.base !== \"undefined\") {\n      baseStyles[\"--app-shell-header-height\"] = rem(headerHeight.base);\n      if (shouldOffset) {\n        baseStyles[\"--app-shell-header-offset\"] = rem(headerHeight.base);\n      }\n    }\n    keys(headerHeight).forEach(key => {\n      if (key !== \"base\") {\n        minMediaStyles[key] = minMediaStyles[key] || {};\n        minMediaStyles[key][\"--app-shell-header-height\"] = rem(headerHeight[key]);\n        if (shouldOffset) {\n          minMediaStyles[key][\"--app-shell-header-offset\"] = rem(headerHeight[key]);\n        }\n      }\n    });\n  }\n  if (header == null ? void 0 : header.collapsed) {\n    baseStyles[\"--app-shell-header-transform\"] = collapsedHeaderTransform;\n    baseStyles[\"--app-shell-header-offset\"] = \"0px !important\";\n  }\n}\nexport { assignHeaderVariables };","map":{"version":3,"names":["assignHeaderVariables","_ref","baseStyles","minMediaStyles","header","_a","headerHeight","height","collapsedHeaderTransform","shouldOffset","offset","isPrimitiveSize","baseSize","rem","getBaseSize","isResponsiveSize","base","keys","forEach","key","collapsed"],"sources":["/Users/Zijian/Desktop/fypfull/client/node_modules/@mantine/core/src/components/AppShell/AppShellMediaStyles/assign-header-variables/assign-header-variables.ts"],"sourcesContent":["/* eslint-disable no-param-reassign */\nimport { keys, rem } from '../../../../core';\nimport type { CSSVariables, MediaQueryVariables } from '../get-variables/get-variables';\nimport type { AppShellProps } from '../../AppShell';\nimport { isResponsiveSize } from '../is-responsive-size/is-responsive-size';\nimport { isPrimitiveSize } from '../is-primitive-size/is-primitive-size';\nimport { getBaseSize } from '../get-base-size/get-base-size';\n\ninterface AssignHeaderVariablesInput {\n  baseStyles: CSSVariables;\n  minMediaStyles: MediaQueryVariables;\n  header: AppShellProps['header'] | undefined;\n}\n\nexport function assignHeaderVariables({\n  baseStyles,\n  minMediaStyles,\n  header,\n}: AssignHeaderVariablesInput) {\n  const headerHeight = header?.height;\n  const collapsedHeaderTransform = 'translateY(calc(var(--app-shell-header-height) * -1))';\n  const shouldOffset = header?.offset ?? true;\n\n  if (isPrimitiveSize(headerHeight)) {\n    const baseSize = rem(getBaseSize(headerHeight));\n    baseStyles['--app-shell-header-height'] = baseSize;\n    if (shouldOffset) {\n      baseStyles['--app-shell-header-offset'] = baseSize;\n    }\n  }\n\n  if (isResponsiveSize(headerHeight)) {\n    if (typeof headerHeight.base !== 'undefined') {\n      baseStyles['--app-shell-header-height'] = rem(headerHeight.base);\n\n      if (shouldOffset) {\n        baseStyles['--app-shell-header-offset'] = rem(headerHeight.base);\n      }\n    }\n\n    keys(headerHeight).forEach((key) => {\n      if (key !== 'base') {\n        minMediaStyles[key] = minMediaStyles[key] || {};\n        minMediaStyles[key]['--app-shell-header-height'] = rem(headerHeight[key]);\n\n        if (shouldOffset) {\n          minMediaStyles[key]['--app-shell-header-offset'] = rem(headerHeight[key]);\n        }\n      }\n    });\n  }\n\n  if (header?.collapsed) {\n    baseStyles['--app-shell-header-transform'] = collapsedHeaderTransform;\n    baseStyles['--app-shell-header-offset'] = '0px !important';\n  }\n}\n"],"mappings":";;;;;AAIO,SAASA,qBAAqBA,CAAAC,IAAA,EAIlC;EAAA,IAJmC;IACpCC,UAAU;IACVC,cAAc;IACdC;EACF,CAAC,GAAAH,IAAA;EACC,IAAII,EAAE;EACN,MAAMC,YAAY,GAAGF,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACG,MAAM;EAC5D,MAAMC,wBAAwB,GAAG,uDAAuD;EACxF,MAAMC,YAAY,GAAG,CAACJ,EAAE,GAAGD,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACM,MAAM,KAAK,IAAI,GAAGL,EAAE,GAAG,IAAI;EACvF,IAAIM,eAAe,CAACL,YAAY,CAAC,EAAE;IACjC,MAAMM,QAAQ,GAAGC,GAAG,CAACC,WAAW,CAACR,YAAY,CAAC,CAAC;IAC/CJ,UAAU,CAAC,2BAA2B,CAAC,GAAGU,QAAQ;IAClD,IAAIH,YAAY,EAAE;MAChBP,UAAU,CAAC,2BAA2B,CAAC,GAAGU,QAAQ;IACxD;EACA;EACE,IAAIG,gBAAgB,CAACT,YAAY,CAAC,EAAE;IAClC,IAAI,OAAOA,YAAY,CAACU,IAAI,KAAK,WAAW,EAAE;MAC5Cd,UAAU,CAAC,2BAA2B,CAAC,GAAGW,GAAG,CAACP,YAAY,CAACU,IAAI,CAAC;MAChE,IAAIP,YAAY,EAAE;QAChBP,UAAU,CAAC,2BAA2B,CAAC,GAAGW,GAAG,CAACP,YAAY,CAACU,IAAI,CAAC;MACxE;IACA;IACIC,IAAI,CAACX,YAAY,CAAC,CAACY,OAAO,CAAEC,GAAG,IAAK;MAClC,IAAIA,GAAG,KAAK,MAAM,EAAE;QAClBhB,cAAc,CAACgB,GAAG,CAAC,GAAGhB,cAAc,CAACgB,GAAG,CAAC,IAAI,EAAE;QAC/ChB,cAAc,CAACgB,GAAG,CAAC,CAAC,2BAA2B,CAAC,GAAGN,GAAG,CAACP,YAAY,CAACa,GAAG,CAAC,CAAC;QACzE,IAAIV,YAAY,EAAE;UAChBN,cAAc,CAACgB,GAAG,CAAC,CAAC,2BAA2B,CAAC,GAAGN,GAAG,CAACP,YAAY,CAACa,GAAG,CAAC,CAAC;QACnF;MACA;IACA,CAAK,CAAC;EACN;EACE,IAAIf,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACgB,SAAS,EAAE;IAC9ClB,UAAU,CAAC,8BAA8B,CAAC,GAAGM,wBAAwB;IACrEN,UAAU,CAAC,2BAA2B,CAAC,GAAG,gBAAgB;EAC9D;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}