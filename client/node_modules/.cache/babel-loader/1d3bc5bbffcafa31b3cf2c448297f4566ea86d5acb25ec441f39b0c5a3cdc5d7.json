{"ast":null,"code":"import { getBaseSize } from '../get-base-size/get-base-size.js';\nimport { getPaddingValue } from '../get-padding-value/get-padding-value.js';\nimport { isPrimitiveSize } from '../is-primitive-size/is-primitive-size.js';\nimport { isResponsiveSize } from '../is-responsive-size/is-responsive-size.js';\nimport { keys } from '../../../../core/utils/keys/keys.js';\nfunction assignPaddingVariables(_ref) {\n  let {\n    padding,\n    baseStyles,\n    minMediaStyles\n  } = _ref;\n  if (isPrimitiveSize(padding)) {\n    baseStyles[\"--app-shell-padding\"] = getPaddingValue(getBaseSize(padding));\n  }\n  if (isResponsiveSize(padding)) {\n    if (padding.base) {\n      baseStyles[\"--app-shell-padding\"] = getPaddingValue(padding.base);\n    }\n    keys(padding).forEach(key => {\n      if (key !== \"base\") {\n        minMediaStyles[key] = minMediaStyles[key] || {};\n        minMediaStyles[key][\"--app-shell-padding\"] = getPaddingValue(padding[key]);\n      }\n    });\n  }\n}\nexport { assignPaddingVariables };","map":{"version":3,"names":["assignPaddingVariables","_ref","padding","baseStyles","minMediaStyles","isPrimitiveSize","getPaddingValue","getBaseSize","isResponsiveSize","base","keys","forEach","key"],"sources":["/Users/Zijian/Desktop/fypfull/client/node_modules/@mantine/core/src/components/AppShell/AppShellMediaStyles/assign-padding-variables/assign-padding-variables.ts"],"sourcesContent":["/* eslint-disable no-param-reassign */\nimport { keys } from '../../../../core';\nimport type { AppShellProps } from '../../AppShell';\nimport { getBaseSize } from '../get-base-size/get-base-size';\nimport { getPaddingValue } from '../get-padding-value/get-padding-value';\nimport type { CSSVariables, MediaQueryVariables } from '../get-variables/get-variables';\nimport { isPrimitiveSize } from '../is-primitive-size/is-primitive-size';\nimport { isResponsiveSize } from '../is-responsive-size/is-responsive-size';\n\ninterface AssignPaddingVariablesInput {\n  baseStyles: CSSVariables;\n  minMediaStyles: MediaQueryVariables;\n  padding: AppShellProps['padding'] | undefined;\n}\n\nexport function assignPaddingVariables({\n  padding,\n  baseStyles,\n  minMediaStyles,\n}: AssignPaddingVariablesInput) {\n  if (isPrimitiveSize(padding)) {\n    baseStyles['--app-shell-padding'] = getPaddingValue(getBaseSize(padding));\n  }\n\n  if (isResponsiveSize(padding)) {\n    if (padding.base) {\n      baseStyles['--app-shell-padding'] = getPaddingValue(padding.base);\n    }\n\n    keys(padding).forEach((key) => {\n      if (key !== 'base') {\n        minMediaStyles[key] = minMediaStyles[key] || {};\n        minMediaStyles[key]['--app-shell-padding'] = getPaddingValue(padding![key]);\n      }\n    });\n  }\n}\n"],"mappings":";;;;;AAKO,SAASA,sBAAsBA,CAAAC,IAAA,EAInC;EAAA,IAJoC;IACrCC,OAAO;IACPC,UAAU;IACVC;EACF,CAAC,GAAAH,IAAA;EACC,IAAII,eAAe,CAACH,OAAO,CAAC,EAAE;IAC5BC,UAAU,CAAC,qBAAqB,CAAC,GAAGG,eAAe,CAACC,WAAW,CAACL,OAAO,CAAC,CAAC;EAC7E;EACE,IAAIM,gBAAgB,CAACN,OAAO,CAAC,EAAE;IAC7B,IAAIA,OAAO,CAACO,IAAI,EAAE;MAChBN,UAAU,CAAC,qBAAqB,CAAC,GAAGG,eAAe,CAACJ,OAAO,CAACO,IAAI,CAAC;IACvE;IACIC,IAAI,CAACR,OAAO,CAAC,CAACS,OAAO,CAAEC,GAAG,IAAK;MAC7B,IAAIA,GAAG,KAAK,MAAM,EAAE;QAClBR,cAAc,CAACQ,GAAG,CAAC,GAAGR,cAAc,CAACQ,GAAG,CAAC,IAAI,EAAE;QAC/CR,cAAc,CAACQ,GAAG,CAAC,CAAC,qBAAqB,CAAC,GAAGN,eAAe,CAACJ,OAAO,CAACU,GAAG,CAAC,CAAC;MAClF;IACA,CAAK,CAAC;EACN;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}