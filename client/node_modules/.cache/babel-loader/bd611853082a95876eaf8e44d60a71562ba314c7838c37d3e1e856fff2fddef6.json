{"ast":null,"code":"var _jsxFileName = \"/Users/Zijian/Desktop/fypfull/client/src/pages/group.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useGroupsContext } from \"../hooks/useGroupsContext\";\nimport { useAuthContext } from \"../hooks/useAuthContext\";\nimport MessageDetails from '../components/MessageDetails';\nimport GroupAdd from '../components/GroupAdd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Group() {\n  _s();\n  const {\n    messages,\n    dispatch\n  } = useGroupsContext();\n  const {\n    user\n  } = useAuthContext();\n  const {\n    id\n  } = useParams();\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (user) {\n      fetchMessages();\n    }\n  }, [dispatch, user]);\n  const fetchMessages = async () => {\n    const response = await fetch('http://localhost:3001/api/groups/messages/' + id, {\n      headers: {\n        'Authorization': `Bearer ${user.token}`\n      }\n    });\n    const json = await response.json();\n    if (response.ok) {\n      dispatch({\n        type: 'SET_MESSAGES',\n        payload: json\n      });\n      console.log(json);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!user) {\n      setError('You must be logged in');\n      return;\n    }\n    const message1 = {\n      message\n    };\n    const response = await fetch('http://localhost:3001/api/groups/messages/' + id, {\n      method: 'POST',\n      body: JSON.stringify(message1),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${user.token}`\n      }\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setError(json.error);\n      //setEmptyFields(json.emptyFields)\n    }\n\n    if (response.ok) {\n      setMessage('');\n      setError(null);\n      //setEmptyFields([])\n      dispatch({\n        type: 'ADD_MESSAGE',\n        payload: json\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scroll\",\n      children: messages && messages.reverse().map(message => /*#__PURE__*/_jsxDEV(MessageDetails, {\n        message: message\n      }, message._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 19\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(GroupAdd, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setMessage(e.target.value),\n      value: message\n      //className={emptyFields.includes('name') ? 'error' : ''}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 7\n  }, this);\n}\n_s(Group, \"VVtlY90swv2iGnDiV1s/etfvbaY=\", false, function () {\n  return [useGroupsContext, useAuthContext, useParams];\n});\n_c = Group;\nvar _c;\n$RefreshReg$(_c, \"Group\");","map":{"version":3,"names":["useEffect","useState","useParams","useGroupsContext","useAuthContext","MessageDetails","GroupAdd","jsxDEV","_jsxDEV","Group","_s","messages","dispatch","user","id","message","setMessage","error","setError","fetchMessages","response","fetch","headers","token","json","ok","type","payload","console","log","handleSubmit","e","preventDefault","message1","method","body","JSON","stringify","className","children","reverse","map","_id","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","value","onClick","_c","$RefreshReg$"],"sources":["/Users/Zijian/Desktop/fypfull/client/src/pages/group.js"],"sourcesContent":["import { useEffect }from 'react'\r\nimport { useState } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport { useGroupsContext } from \"../hooks/useGroupsContext\"\r\nimport { useAuthContext } from \"../hooks/useAuthContext\"\r\n\r\nimport MessageDetails from '../components/MessageDetails'\r\nimport GroupAdd from '../components/GroupAdd'\r\n\r\nexport function Group() {\r\n    const {messages, dispatch} = useGroupsContext()\r\n    const {user} = useAuthContext()\r\n    const { id } = useParams()\r\n\r\n    const [message, setMessage] = useState('')\r\n    const [error, setError] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            fetchMessages()\r\n        }\r\n    }, [dispatch, user])\r\n\r\n    const fetchMessages = async () => {\r\n      const response = await fetch('http://localhost:3001/api/groups/messages/' + id, {\r\n      headers: {'Authorization': `Bearer ${user.token}`},\r\n      })\r\n      const json = await response.json()\r\n\r\n      if (response.ok) {\r\n      dispatch({type: 'SET_MESSAGES', payload: json})\r\n      console.log(json)\r\n      }\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n      e.preventDefault()\r\n  \r\n      if (!user) {\r\n        setError('You must be logged in')\r\n        return\r\n      }\r\n      const message1 = {message}\r\n      const response = await fetch('http://localhost:3001/api/groups/messages/' + id, {\r\n        method: 'POST',\r\n        body: JSON.stringify(message1),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${user.token}`\r\n        }\r\n      })\r\n      const json = await response.json()\r\n  \r\n      if (!response.ok) {\r\n        setError(json.error)\r\n        //setEmptyFields(json.emptyFields)\r\n      }\r\n      if (response.ok) {\r\n        setMessage('')\r\n        setError(null)\r\n        //setEmptyFields([])\r\n        dispatch({type: 'ADD_MESSAGE', payload: json})\r\n      }\r\n    }\r\n    \r\n  return (\r\n      <div className='home'>\r\n          <div className='scroll'>\r\n              {messages && messages.reverse().map((message) => (\r\n                  <MessageDetails key={message._id} message={message} />\r\n          ))}\r\n          </div>\r\n      <GroupAdd/>\r\n      <input \r\n          type=\"text\"\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          value={message}\r\n          //className={emptyFields.includes('name') ? 'error' : ''}\r\n      />\r\n      <button onClick={handleSubmit}>Post</button>\r\n      {error && <div className=\"error\">{error}</div>}\r\n      </div>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}