{"ast":null,"code":"import { useRef, useEffect } from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport { getNextIndex, getPreviousIndex, getFirstIndex } from './get-index/get-virtualized-index.js';\nfunction useVirtualizedCombobox() {\n  let {\n    defaultOpened,\n    opened,\n    onOpenedChange,\n    onDropdownClose,\n    onDropdownOpen,\n    loop = true,\n    totalOptionsCount,\n    isOptionDisabled = () => false,\n    getOptionId,\n    selectedOptionIndex,\n    setSelectedOptionIndex,\n    activeOptionIndex,\n    onSelectedOptionSubmit\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    totalOptionsCount: 0,\n    getOptionId: () => null,\n    selectedOptionIndex: 1,\n    setSelectedOptionIndex: () => {},\n    onSelectedOptionSubmit: () => {}\n  };\n  const [dropdownOpened, setDropdownOpened] = useUncontrolled({\n    value: opened,\n    defaultValue: defaultOpened,\n    finalValue: false,\n    onChange: onOpenedChange\n  });\n  const listId = useRef(null);\n  const searchRef = useRef(null);\n  const targetRef = useRef(null);\n  const focusSearchTimeout = useRef(-1);\n  const focusTargetTimeout = useRef(-1);\n  const openDropdown = () => {\n    if (!dropdownOpened) {\n      setDropdownOpened(true);\n      onDropdownOpen == null ? void 0 : onDropdownOpen();\n    }\n  };\n  const closeDropdown = () => {\n    if (dropdownOpened) {\n      setDropdownOpened(false);\n      onDropdownClose == null ? void 0 : onDropdownClose();\n    }\n  };\n  const toggleDropdown = () => {\n    if (dropdownOpened) {\n      closeDropdown();\n    } else {\n      openDropdown();\n    }\n  };\n  const selectOption = index => {\n    const nextIndex = index >= totalOptionsCount ? 0 : index < 0 ? totalOptionsCount - 1 : index;\n    setSelectedOptionIndex(nextIndex);\n    return getOptionId(nextIndex);\n  };\n  const selectActiveOption = () => selectOption(activeOptionIndex != null ? activeOptionIndex : 0);\n  const selectNextOption = () => selectOption(getNextIndex({\n    currentIndex: selectedOptionIndex,\n    isOptionDisabled,\n    totalOptionsCount,\n    loop\n  }));\n  const selectPreviousOption = () => selectOption(getPreviousIndex({\n    currentIndex: selectedOptionIndex,\n    isOptionDisabled,\n    totalOptionsCount,\n    loop\n  }));\n  const selectFirstOption = () => selectOption(getFirstIndex({\n    isOptionDisabled,\n    totalOptionsCount\n  }));\n  const resetSelectedOption = () => {\n    setSelectedOptionIndex(-1);\n  };\n  const clickSelectedOption = () => {\n    onSelectedOptionSubmit == null ? void 0 : onSelectedOptionSubmit(selectedOptionIndex);\n  };\n  const setListId = id => {\n    listId.current = id;\n  };\n  const focusSearchInput = () => {\n    focusSearchTimeout.current = window.setTimeout(() => searchRef.current.focus(), 0);\n  };\n  const focusTarget = () => {\n    focusTargetTimeout.current = window.setTimeout(() => targetRef.current.focus(), 0);\n  };\n  useEffect(() => () => {\n    window.clearTimeout(focusSearchTimeout.current);\n    window.clearTimeout(focusTargetTimeout.current);\n  }, []);\n  return {\n    dropdownOpened,\n    openDropdown,\n    closeDropdown,\n    toggleDropdown,\n    selectedOptionIndex,\n    selectOption,\n    selectFirstOption,\n    selectActiveOption,\n    selectNextOption,\n    selectPreviousOption,\n    resetSelectedOption,\n    updateSelectedOptionIndex: () => {},\n    listId: listId.current,\n    setListId,\n    clickSelectedOption,\n    searchRef,\n    focusSearchInput,\n    targetRef,\n    focusTarget\n  };\n}\nexport { useVirtualizedCombobox };","map":{"version":3,"names":["useVirtualizedCombobox","defaultOpened","opened","onOpenedChange","onDropdownClose","onDropdownOpen","loop","totalOptionsCount","isOptionDisabled","getOptionId","selectedOptionIndex","setSelectedOptionIndex","activeOptionIndex","onSelectedOptionSubmit","arguments","length","undefined","dropdownOpened","setDropdownOpened","useUncontrolled","value","defaultValue","finalValue","onChange","listId","useRef","searchRef","targetRef","focusSearchTimeout","focusTargetTimeout","openDropdown","closeDropdown","toggleDropdown","selectOption","index","nextIndex","selectActiveOption","selectNextOption","getNextIndex","currentIndex","selectPreviousOption","getPreviousIndex","selectFirstOption","getFirstIndex","resetSelectedOption","clickSelectedOption","setListId","id","current","focusSearchInput","window","setTimeout","focus","focusTarget","useEffect","clearTimeout","updateSelectedOptionIndex"],"sources":["/Users/Zijian/Desktop/fypfull/client/node_modules/@mantine/core/src/components/Combobox/use-combobox/use-virtualized-combobox.ts"],"sourcesContent":["// WIP, not planned to be released in 7.0, maybe in 7.x\nimport { useEffect, useRef } from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport { getPreviousIndex, getNextIndex, getFirstIndex } from './get-index/get-virtualized-index';\nimport { ComboboxStore } from './use-combobox';\n\ninterface UseComboboxOptions {\n  /** Default value for `dropdownOpened`, `false` by default */\n  defaultOpened?: boolean;\n\n  /** Controlled `dropdownOpened` state */\n  opened?: boolean;\n\n  /** Called when `dropdownOpened` state changes */\n  onOpenedChange?(opened: boolean): void;\n\n  /** Called when dropdown closes */\n  onDropdownClose?(): void;\n\n  /** Called when dropdown opens */\n  onDropdownOpen?(): void;\n\n  /** Determines whether arrow key presses should loop though items (first to last and last to first), `true` by default */\n  loop?: boolean;\n\n  /** Function to determine whether the option is disabled */\n  isOptionDisabled?(optionIndex: number): boolean;\n\n  totalOptionsCount: number;\n\n  getOptionId(index: number): string | null;\n\n  selectedOptionIndex: number;\n\n  setSelectedOptionIndex(index: number): void;\n\n  activeOptionIndex?: number;\n\n  onSelectedOptionSubmit(index: number): void;\n}\n\nexport function useVirtualizedCombobox(\n  {\n    defaultOpened,\n    opened,\n    onOpenedChange,\n    onDropdownClose,\n    onDropdownOpen,\n    loop = true,\n    totalOptionsCount,\n    isOptionDisabled = () => false,\n    getOptionId,\n    selectedOptionIndex,\n    setSelectedOptionIndex,\n    activeOptionIndex,\n    onSelectedOptionSubmit,\n  }: UseComboboxOptions = {\n    totalOptionsCount: 0,\n    getOptionId: () => null,\n    selectedOptionIndex: 1,\n    setSelectedOptionIndex: () => {},\n    onSelectedOptionSubmit: () => {},\n  }\n): ComboboxStore {\n  const [dropdownOpened, setDropdownOpened] = useUncontrolled({\n    value: opened,\n    defaultValue: defaultOpened,\n    finalValue: false,\n    onChange: onOpenedChange,\n  });\n\n  const listId = useRef<string | null>(null);\n  const searchRef = useRef<HTMLInputElement | null>(null);\n  const targetRef = useRef<HTMLElement | null>(null);\n  const focusSearchTimeout = useRef<number>(-1);\n  const focusTargetTimeout = useRef<number>(-1);\n\n  const openDropdown = () => {\n    if (!dropdownOpened) {\n      setDropdownOpened(true);\n      onDropdownOpen?.();\n    }\n  };\n\n  const closeDropdown = () => {\n    if (dropdownOpened) {\n      setDropdownOpened(false);\n      onDropdownClose?.();\n    }\n  };\n\n  const toggleDropdown = () => {\n    if (dropdownOpened) {\n      closeDropdown();\n    } else {\n      openDropdown();\n    }\n  };\n\n  const selectOption = (index: number) => {\n    const nextIndex = index >= totalOptionsCount ? 0 : index < 0 ? totalOptionsCount - 1 : index;\n    setSelectedOptionIndex(nextIndex);\n    return getOptionId(nextIndex);\n  };\n\n  const selectActiveOption = () => selectOption(activeOptionIndex ?? 0);\n\n  const selectNextOption = () =>\n    selectOption(\n      getNextIndex({ currentIndex: selectedOptionIndex, isOptionDisabled, totalOptionsCount, loop })\n    );\n\n  const selectPreviousOption = () =>\n    selectOption(\n      getPreviousIndex({\n        currentIndex: selectedOptionIndex,\n        isOptionDisabled,\n        totalOptionsCount,\n        loop,\n      })\n    );\n\n  const selectFirstOption = () =>\n    selectOption(getFirstIndex({ isOptionDisabled, totalOptionsCount }));\n\n  const resetSelectedOption = () => {\n    setSelectedOptionIndex(-1);\n  };\n\n  const clickSelectedOption = () => {\n    onSelectedOptionSubmit?.(selectedOptionIndex);\n  };\n\n  const setListId = (id: string) => {\n    listId.current = id;\n  };\n\n  const focusSearchInput = () => {\n    focusSearchTimeout.current = window.setTimeout(() => searchRef.current!.focus(), 0);\n  };\n\n  const focusTarget = () => {\n    focusTargetTimeout.current = window.setTimeout(() => targetRef.current!.focus(), 0);\n  };\n\n  useEffect(\n    () => () => {\n      window.clearTimeout(focusSearchTimeout.current);\n      window.clearTimeout(focusTargetTimeout.current);\n    },\n    []\n  );\n\n  return {\n    dropdownOpened,\n    openDropdown,\n    closeDropdown,\n    toggleDropdown,\n\n    selectedOptionIndex,\n    selectOption,\n    selectFirstOption,\n    selectActiveOption,\n    selectNextOption,\n    selectPreviousOption,\n    resetSelectedOption,\n    updateSelectedOptionIndex: () => {},\n\n    listId: listId.current,\n    setListId,\n    clickSelectedOption,\n\n    searchRef,\n    focusSearchInput,\n\n    targetRef,\n    focusTarget,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}