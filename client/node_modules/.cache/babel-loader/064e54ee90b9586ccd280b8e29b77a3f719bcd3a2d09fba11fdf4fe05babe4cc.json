{"ast":null,"code":"import { parseThemeColor } from '../parse-theme-color/parse-theme-color.js';\nimport { getGradient } from '../get-gradient/get-gradient.js';\nimport { darken } from '../darken/darken.js';\nimport { rgba } from '../rgba/rgba.js';\nimport { rem } from '../../../utils/units-converters/rem.js';\nconst defaultVariantColorsResolver = _ref => {\n  let {\n    color,\n    theme,\n    variant,\n    gradient\n  } = _ref;\n  const parsed = parseThemeColor({\n    color,\n    theme\n  });\n  if (variant === \"filled\") {\n    if (parsed.isThemeColor) {\n      if (parsed.shade === void 0) {\n        return {\n          background: `var(--mantine-color-${color}-filled)`,\n          hover: `var(--mantine-color-${color}-filled-hover)`,\n          color: \"var(--mantine-color-white)\",\n          border: `${rem(1)} solid transparent`\n        };\n      }\n      return {\n        background: `var(--mantine-color-${parsed.color}-${parsed.shade})`,\n        hover: `var(--mantine-color-${parsed.color}-${parsed.shade === 9 ? 8 : parsed.shade + 1})`,\n        color: \"var(--mantine-color-white)\",\n        border: `${rem(1)} solid transparent`\n      };\n    }\n    return {\n      background: color,\n      hover: darken(color, 0.1),\n      color: \"var(--mantine-color-white)\",\n      border: `${rem(1)} solid transparent`\n    };\n  }\n  if (variant === \"light\") {\n    if (parsed.isThemeColor) {\n      if (parsed.shade === void 0) {\n        return {\n          background: `var(--mantine-color-${color}-light)`,\n          hover: `var(--mantine-color-${color}-light-hover)`,\n          color: `var(--mantine-color-${color}-light-color)`,\n          border: `${rem(1)} solid transparent`\n        };\n      }\n      const parsedColor = theme.colors[parsed.color][parsed.shade];\n      return {\n        background: rgba(parsedColor, 0.1),\n        hover: rgba(parsedColor, 0.12),\n        color: `var(--mantine-color-${parsed.color}-${Math.min(parsed.shade, 6)})`,\n        border: `${rem(1)} solid transparent`\n      };\n    }\n    return {\n      background: rgba(color, 0.1),\n      hover: rgba(color, 0.12),\n      color,\n      border: `${rem(1)} solid transparent`\n    };\n  }\n  if (variant === \"outline\") {\n    if (parsed.isThemeColor) {\n      if (parsed.shade === void 0) {\n        return {\n          background: \"transparent\",\n          hover: `var(--mantine-color-${color}-outline-hover)`,\n          color: `var(--mantine-color-${color}-outline)`,\n          border: `${rem(1)} solid var(--mantine-color-${color}-outline)`\n        };\n      }\n      return {\n        background: \"transparent\",\n        hover: rgba(theme.colors[parsed.color][parsed.shade], 0.05),\n        color: `var(--mantine-color-${parsed.color}-${parsed.shade})`,\n        border: `${rem(1)} solid var(--mantine-color-${parsed.color}-${parsed.shade})`\n      };\n    }\n    return {\n      background: \"transparent\",\n      hover: rgba(color, 0.05),\n      color,\n      border: `${rem(1)} solid ${color}`\n    };\n  }\n  if (variant === \"subtle\") {\n    if (parsed.isThemeColor) {\n      if (parsed.shade === void 0) {\n        return {\n          background: \"transparent\",\n          hover: `var(--mantine-color-${color}-light-hover)`,\n          color: `var(--mantine-color-${color}-light-color)`,\n          border: `${rem(1)} solid transparent`\n        };\n      }\n      const parsedColor = theme.colors[parsed.color][parsed.shade];\n      return {\n        background: \"transparent\",\n        hover: rgba(parsedColor, 0.12),\n        color: `var(--mantine-color-${parsed.color}-${Math.min(parsed.shade, 6)})`,\n        border: `${rem(1)} solid transparent`\n      };\n    }\n    return {\n      background: \"transparent\",\n      hover: rgba(color, 0.12),\n      color,\n      border: `${rem(1)} solid transparent`\n    };\n  }\n  if (variant === \"transparent\") {\n    if (parsed.isThemeColor) {\n      if (parsed.shade === void 0) {\n        return {\n          background: \"transparent\",\n          hover: \"transparent\",\n          color: `var(--mantine-color-${color}-light-color)`,\n          border: `${rem(1)} solid transparent`\n        };\n      }\n      return {\n        background: \"transparent\",\n        hover: \"transparent\",\n        color: `var(--mantine-color-${parsed.color}-${Math.min(parsed.shade, 6)})`,\n        border: `${rem(1)} solid transparent`\n      };\n    }\n    return {\n      background: \"transparent\",\n      hover: \"transparent\",\n      color,\n      border: `${rem(1)} solid transparent`\n    };\n  }\n  if (variant === \"white\") {\n    if (parsed.isThemeColor) {\n      if (parsed.shade === void 0) {\n        return {\n          background: \"var(--mantine-color-white)\",\n          hover: darken(theme.white, 0.01),\n          color: `var(--mantine-color-${color}-filled)`,\n          border: `${rem(1)} solid transparent`\n        };\n      }\n      return {\n        background: \"var(--mantine-color-white)\",\n        hover: darken(theme.white, 0.01),\n        color: `var(--mantine-color-${parsed.color}-${parsed.shade})`,\n        border: `${rem(1)} solid transparent`\n      };\n    }\n    return {\n      background: \"var(--mantine-color-white)\",\n      hover: darken(theme.white, 0.01),\n      color,\n      border: `${rem(1)} solid transparent`\n    };\n  }\n  if (variant === \"gradient\") {\n    return {\n      background: getGradient(gradient, theme),\n      hover: getGradient(gradient, theme),\n      color: \"var(--mantine-color-white)\",\n      border: \"none\"\n    };\n  }\n  if (variant === \"default\") {\n    return {\n      background: \"var(--mantine-color-default)\",\n      hover: \"var(--mantine-color-default-hover)\",\n      color: \"var(--mantine-color-default-color)\",\n      border: `${rem(1)} solid var(--mantine-color-default-border)`\n    };\n  }\n  return {};\n};\nexport { defaultVariantColorsResolver };","map":{"version":3,"names":["defaultVariantColorsResolver","_ref","color","theme","variant","gradient","parsed","parseThemeColor","isThemeColor","shade","background","hover","border","rem","darken","parsedColor","colors","rgba","Math","min","white","getGradient"],"sources":["/Users/Zijian/Desktop/fypfull/client/node_modules/@mantine/core/src/core/MantineProvider/color-functions/default-variant-colors-resolver/default-variant-colors-resolver.ts"],"sourcesContent":["import { MantineColor, MantineTheme, MantineGradient } from '../../theme.types';\nimport { parseThemeColor } from '../parse-theme-color/parse-theme-color';\nimport { getGradient } from '../get-gradient/get-gradient';\nimport { darken } from '../darken/darken';\nimport { rgba } from '../rgba/rgba';\nimport { rem } from '../../../utils';\n\nexport interface VariantColorsResolverInput {\n  color: MantineColor | undefined;\n  theme: MantineTheme;\n  variant: string;\n  gradient?: MantineGradient;\n}\n\nexport interface VariantColorResolverResult {\n  background: string;\n  hover: string;\n  color: string;\n  border: string;\n}\n\nexport type VariantColorsResolver = (\n  input: VariantColorsResolverInput\n) => VariantColorResolverResult;\n\nexport const defaultVariantColorsResolver: VariantColorsResolver = ({\n  color,\n  theme,\n  variant,\n  gradient,\n}) => {\n  const parsed = parseThemeColor({ color, theme });\n\n  if (variant === 'filled') {\n    if (parsed.isThemeColor) {\n      if (parsed.shade === undefined) {\n        return {\n          background: `var(--mantine-color-${color}-filled)`,\n          hover: `var(--mantine-color-${color}-filled-hover)`,\n          color: 'var(--mantine-color-white)',\n          border: `${rem(1)} solid transparent`,\n        };\n      }\n\n      return {\n        background: `var(--mantine-color-${parsed.color}-${parsed.shade})`,\n        hover: `var(--mantine-color-${parsed.color}-${parsed.shade === 9 ? 8 : parsed.shade + 1})`,\n        color: 'var(--mantine-color-white)',\n        border: `${rem(1)} solid transparent`,\n      };\n    }\n\n    return {\n      background: color!,\n      hover: darken(color!, 0.1),\n      color: 'var(--mantine-color-white)',\n      border: `${rem(1)} solid transparent`,\n    };\n  }\n\n  if (variant === 'light') {\n    if (parsed.isThemeColor) {\n      if (parsed.shade === undefined) {\n        return {\n          background: `var(--mantine-color-${color}-light)`,\n          hover: `var(--mantine-color-${color}-light-hover)`,\n          color: `var(--mantine-color-${color}-light-color)`,\n          border: `${rem(1)} solid transparent`,\n        };\n      }\n\n      const parsedColor = theme.colors[parsed.color][parsed.shade];\n\n      return {\n        background: rgba(parsedColor, 0.1),\n        hover: rgba(parsedColor, 0.12),\n        color: `var(--mantine-color-${parsed.color}-${Math.min(parsed.shade, 6)})`,\n        border: `${rem(1)} solid transparent`,\n      };\n    }\n\n    return {\n      background: rgba(color!, 0.1),\n      hover: rgba(color!, 0.12),\n      color: color!,\n      border: `${rem(1)} solid transparent`,\n    };\n  }\n\n  if (variant === 'outline') {\n    if (parsed.isThemeColor) {\n      if (parsed.shade === undefined) {\n        return {\n          background: 'transparent',\n          hover: `var(--mantine-color-${color}-outline-hover)`,\n          color: `var(--mantine-color-${color}-outline)`,\n          border: `${rem(1)} solid var(--mantine-color-${color}-outline)`,\n        };\n      }\n\n      return {\n        background: 'transparent',\n        hover: rgba(theme.colors[parsed.color][parsed.shade], 0.05),\n        color: `var(--mantine-color-${parsed.color}-${parsed.shade})`,\n        border: `${rem(1)} solid var(--mantine-color-${parsed.color}-${parsed.shade})`,\n      };\n    }\n\n    return {\n      background: 'transparent',\n      hover: rgba(color!, 0.05),\n      color: color!,\n      border: `${rem(1)} solid ${color}`,\n    };\n  }\n\n  if (variant === 'subtle') {\n    if (parsed.isThemeColor) {\n      if (parsed.shade === undefined) {\n        return {\n          background: 'transparent',\n          hover: `var(--mantine-color-${color}-light-hover)`,\n          color: `var(--mantine-color-${color}-light-color)`,\n          border: `${rem(1)} solid transparent`,\n        };\n      }\n\n      const parsedColor = theme.colors[parsed.color][parsed.shade];\n\n      return {\n        background: 'transparent',\n        hover: rgba(parsedColor, 0.12),\n        color: `var(--mantine-color-${parsed.color}-${Math.min(parsed.shade, 6)})`,\n        border: `${rem(1)} solid transparent`,\n      };\n    }\n\n    return {\n      background: 'transparent',\n      hover: rgba(color!, 0.12),\n      color: color!,\n      border: `${rem(1)} solid transparent`,\n    };\n  }\n\n  if (variant === 'transparent') {\n    if (parsed.isThemeColor) {\n      if (parsed.shade === undefined) {\n        return {\n          background: 'transparent',\n          hover: 'transparent',\n          color: `var(--mantine-color-${color}-light-color)`,\n          border: `${rem(1)} solid transparent`,\n        };\n      }\n\n      return {\n        background: 'transparent',\n        hover: 'transparent',\n        color: `var(--mantine-color-${parsed.color}-${Math.min(parsed.shade, 6)})`,\n        border: `${rem(1)} solid transparent`,\n      };\n    }\n\n    return {\n      background: 'transparent',\n      hover: 'transparent',\n      color: color!,\n      border: `${rem(1)} solid transparent`,\n    };\n  }\n\n  if (variant === 'white') {\n    if (parsed.isThemeColor) {\n      if (parsed.shade === undefined) {\n        return {\n          background: 'var(--mantine-color-white)',\n          hover: darken(theme.white, 0.01),\n          color: `var(--mantine-color-${color}-filled)`,\n          border: `${rem(1)} solid transparent`,\n        };\n      }\n\n      return {\n        background: 'var(--mantine-color-white)',\n        hover: darken(theme.white, 0.01),\n        color: `var(--mantine-color-${parsed.color}-${parsed.shade})`,\n        border: `${rem(1)} solid transparent`,\n      };\n    }\n\n    return {\n      background: 'var(--mantine-color-white)',\n      hover: darken(theme.white, 0.01),\n      color: color!,\n      border: `${rem(1)} solid transparent`,\n    };\n  }\n\n  if (variant === 'gradient') {\n    return {\n      background: getGradient(gradient, theme),\n      hover: getGradient(gradient, theme),\n      color: 'var(--mantine-color-white)',\n      border: 'none',\n    };\n  }\n\n  if (variant === 'default') {\n    return {\n      background: 'var(--mantine-color-default)',\n      hover: 'var(--mantine-color-default-hover)',\n      color: 'var(--mantine-color-default-color)',\n      border: `${rem(1)} solid var(--mantine-color-default-border)`,\n    };\n  }\n\n  return {} as VariantColorResolverResult;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}