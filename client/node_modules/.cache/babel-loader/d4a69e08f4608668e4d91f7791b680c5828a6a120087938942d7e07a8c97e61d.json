{"ast":null,"code":"import { createSafeContext } from '../../core/utils/create-safe-context/create-safe-context.js';\nconst [AccordionProvider, useAccordionContext] = createSafeContext(\"Accordion component was not found in the tree\");\nexport { AccordionProvider, useAccordionContext };","map":{"version":3,"names":["AccordionProvider","useAccordionContext","createSafeContext"],"sources":["/Users/Zijian/Desktop/fypfull/client/node_modules/@mantine/core/src/components/Accordion/Accordion.context.ts"],"sourcesContent":["import { createSafeContext, GetStylesApi } from '../../core';\nimport { AccordionChevronPosition, AccordionHeadingOrder } from './Accordion.types';\nimport type { AccordionFactory } from './Accordion';\n\ninterface AccordionContext {\n  loop: boolean | undefined;\n  transitionDuration: number | undefined;\n  disableChevronRotation: boolean | undefined;\n  chevronPosition: AccordionChevronPosition | undefined;\n  order: AccordionHeadingOrder | undefined;\n  chevron: React.ReactNode;\n  onChange(value: string): void;\n  isItemActive(value: string): boolean;\n  getControlId(value: string): string;\n  getRegionId(value: string): string;\n  getStyles: GetStylesApi<AccordionFactory>;\n  variant: string | undefined;\n  unstyled: boolean | undefined;\n}\n\nexport const [AccordionProvider, useAccordionContext] = createSafeContext<AccordionContext>(\n  'Accordion component was not found in the tree'\n);\n"],"mappings":";AACY,MAAC,CAACA,iBAAiB,EAAEC,mBAAmB,CAAC,GAAGC,iBAAiB,CACvE,+CAA+C,CACjD"},"metadata":{},"sourceType":"module","externalDependencies":[]}