{"ast":null,"code":"import { useState } from 'react';\nimport { useId, useWindowEvent, useFocusReturn } from '@mantine/hooks';\nimport { useLockScroll } from './use-lock-scroll.js';\nfunction useModal(_ref) {\n  let {\n    id,\n    transitionProps,\n    opened,\n    trapFocus,\n    closeOnEscape,\n    onClose,\n    returnFocus\n  } = _ref;\n  const _id = useId(id);\n  const [titleMounted, setTitleMounted] = useState(false);\n  const [bodyMounted, setBodyMounted] = useState(false);\n  const transitionDuration = typeof (transitionProps == null ? void 0 : transitionProps.duration) === \"number\" ? transitionProps == null ? void 0 : transitionProps.duration : 200;\n  const shouldLockScroll = useLockScroll({\n    opened,\n    transitionDuration\n  });\n  useWindowEvent(\"keydown\", event => {\n    if (!trapFocus && event.key === \"Escape\" && closeOnEscape) {\n      onClose();\n    }\n  });\n  useFocusReturn({\n    opened,\n    shouldReturnFocus: trapFocus && returnFocus\n  });\n  return {\n    _id,\n    titleMounted,\n    bodyMounted,\n    shouldLockScroll,\n    setTitleMounted,\n    setBodyMounted\n  };\n}\nexport { useModal };","map":{"version":3,"names":["useModal","_ref","id","transitionProps","opened","trapFocus","closeOnEscape","onClose","returnFocus","_id","useId","titleMounted","setTitleMounted","useState","bodyMounted","setBodyMounted","transitionDuration","duration","shouldLockScroll","useLockScroll","useWindowEvent","event","key","useFocusReturn","shouldReturnFocus"],"sources":["/Users/Zijian/Desktop/fypfull/client/node_modules/@mantine/core/src/components/ModalBase/use-modal.ts"],"sourcesContent":["import { useState } from 'react';\nimport { useId, useWindowEvent, useFocusReturn } from '@mantine/hooks';\nimport { useLockScroll } from './use-lock-scroll';\nimport { TransitionOverride } from '../Transition';\n\ninterface UseModalInput {\n  opened: boolean;\n  onClose(): void;\n  id: string | undefined;\n  transitionProps: TransitionOverride | undefined;\n  trapFocus: boolean | undefined;\n  closeOnEscape: boolean | undefined;\n  returnFocus: boolean | undefined;\n}\n\nexport function useModal({\n  id,\n  transitionProps,\n  opened,\n  trapFocus,\n  closeOnEscape,\n  onClose,\n  returnFocus,\n}: UseModalInput) {\n  const _id = useId(id);\n  const [titleMounted, setTitleMounted] = useState(false);\n  const [bodyMounted, setBodyMounted] = useState(false);\n\n  const transitionDuration =\n    typeof transitionProps?.duration === 'number' ? transitionProps?.duration : 200;\n\n  const shouldLockScroll = useLockScroll({ opened, transitionDuration });\n\n  useWindowEvent('keydown', (event) => {\n    if (!trapFocus && event.key === 'Escape' && closeOnEscape) {\n      onClose();\n    }\n  });\n\n  useFocusReturn({ opened, shouldReturnFocus: trapFocus && returnFocus });\n\n  return {\n    _id,\n    titleMounted,\n    bodyMounted,\n    shouldLockScroll,\n    setTitleMounted,\n    setBodyMounted,\n  };\n}\n"],"mappings":";;;AAGO,SAASA,QAAQA,CAAAC,IAAA,EAQrB;EAAA,IARsB;IACvBC,EAAE;IACFC,eAAe;IACfC,MAAM;IACNC,SAAS;IACTC,aAAa;IACbC,OAAO;IACPC;EACF,CAAC,GAAAP,IAAA;EACC,MAAMQ,GAAG,GAAGC,KAAK,CAACR,EAAE,CAAC;EACrB,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGC,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGF,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMG,kBAAkB,GAAG,QAAQb,eAAe,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,eAAe,CAACc,QAAQ,CAAC,KAAK,QAAQ,GAAGd,eAAe,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,eAAe,CAACc,QAAQ,GAAG,GAAG;EAChL,MAAMC,gBAAgB,GAAGC,aAAa,CAAC;IAAEf,MAAM;IAAEY;EAAkB,CAAE,CAAC;EACtEI,cAAc,CAAC,SAAS,EAAGC,KAAK,IAAK;IACnC,IAAI,CAAChB,SAAS,IAAIgB,KAAK,CAACC,GAAG,KAAK,QAAQ,IAAIhB,aAAa,EAAE;MACzDC,OAAO,EAAE;IACf;EACA,CAAG,CAAC;EACFgB,cAAc,CAAC;IAAEnB,MAAM;IAAEoB,iBAAiB,EAAEnB,SAAS,IAAIG;EAAW,CAAE,CAAC;EACvE,OAAO;IACLC,GAAG;IACHE,YAAY;IACZG,WAAW;IACXI,gBAAgB;IAChBN,eAAe;IACfG;EACJ,CAAG;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}