{"ast":null,"code":"import { isResponsiveSize } from '../is-responsive-size/is-responsive-size.js';\nimport { isPrimitiveSize } from '../is-primitive-size/is-primitive-size.js';\nimport { getBaseSize } from '../get-base-size/get-base-size.js';\nimport { keys } from '../../../../core/utils/keys/keys.js';\nimport { getBreakpointValue } from '../../../../core/utils/get-breakpoint-value/get-breakpoint-value.js';\nimport { rem } from '../../../../core/utils/units-converters/rem.js';\nfunction assignAsideVariables(_ref) {\n  let {\n    baseStyles,\n    minMediaStyles,\n    maxMediaStyles,\n    aside,\n    theme\n  } = _ref;\n  var _a, _b, _c;\n  const asideWidth = aside == null ? void 0 : aside.width;\n  const collapsedAsideTransform = \"translateX(var(--app-shell-aside-width))\";\n  const collapsedAsideTransformRtl = \"translateX(calc(var(--app-shell-aside-width) * -1))\";\n  if ((aside == null ? void 0 : aside.breakpoint) && !((_a = aside == null ? void 0 : aside.collapsed) == null ? void 0 : _a.mobile)) {\n    maxMediaStyles[aside == null ? void 0 : aside.breakpoint] = maxMediaStyles[aside == null ? void 0 : aside.breakpoint] || {};\n    maxMediaStyles[aside == null ? void 0 : aside.breakpoint][\"--app-shell-aside-width\"] = \"100%\";\n    maxMediaStyles[aside == null ? void 0 : aside.breakpoint][\"--app-shell-aside-offset\"] = \"0px\";\n  }\n  if (isPrimitiveSize(asideWidth)) {\n    const baseSize = rem(getBaseSize(asideWidth));\n    baseStyles[\"--app-shell-aside-width\"] = baseSize;\n    baseStyles[\"--app-shell-aside-offset\"] = baseSize;\n  }\n  if (isResponsiveSize(asideWidth)) {\n    if (typeof asideWidth.base !== \"undefined\") {\n      baseStyles[\"--app-shell-aside-width\"] = rem(asideWidth.base);\n      baseStyles[\"--app-shell-aside-offset\"] = rem(asideWidth.base);\n    }\n    keys(asideWidth).forEach(key => {\n      if (key !== \"base\") {\n        minMediaStyles[key] = minMediaStyles[key] || {};\n        minMediaStyles[key][\"--app-shell-aside-width\"] = rem(asideWidth[key]);\n        minMediaStyles[key][\"--app-shell-aside-offset\"] = rem(asideWidth[key]);\n      }\n    });\n  }\n  if ((_b = aside == null ? void 0 : aside.collapsed) == null ? void 0 : _b.desktop) {\n    const breakpointValue = aside.breakpoint;\n    minMediaStyles[breakpointValue] = minMediaStyles[breakpointValue] || {};\n    minMediaStyles[breakpointValue][\"--app-shell-aside-transform\"] = collapsedAsideTransform;\n    minMediaStyles[breakpointValue][\"--app-shell-aside-transform-rtl\"] = collapsedAsideTransformRtl;\n    minMediaStyles[breakpointValue][\"--app-shell-aside-offset\"] = \"0px !important\";\n  }\n  if ((_c = aside == null ? void 0 : aside.collapsed) == null ? void 0 : _c.mobile) {\n    const breakpointValue = getBreakpointValue(aside.breakpoint, theme) - 0.1;\n    maxMediaStyles[breakpointValue] = maxMediaStyles[breakpointValue] || {};\n    maxMediaStyles[breakpointValue][\"--app-shell-aside-width\"] = \"100%\";\n    maxMediaStyles[breakpointValue][\"--app-shell-aside-offset\"] = \"0px\";\n    maxMediaStyles[breakpointValue][\"--app-shell-aside-transform\"] = collapsedAsideTransform;\n    maxMediaStyles[breakpointValue][\"--app-shell-aside-transform-rtl\"] = collapsedAsideTransformRtl;\n  }\n}\nexport { assignAsideVariables };","map":{"version":3,"names":["assignAsideVariables","_ref","baseStyles","minMediaStyles","maxMediaStyles","aside","theme","_a","_b","_c","asideWidth","width","collapsedAsideTransform","collapsedAsideTransformRtl","breakpoint","collapsed","mobile","isPrimitiveSize","baseSize","rem","getBaseSize","isResponsiveSize","base","keys","forEach","key","desktop","breakpointValue","getBreakpointValue"],"sources":["/Users/Zijian/Desktop/fypfull/client/node_modules/@mantine/core/src/components/AppShell/AppShellMediaStyles/assign-aside-variables/assign-aside-variables.ts"],"sourcesContent":["/* eslint-disable no-param-reassign */\nimport { MantineTheme, keys, rem, getBreakpointValue } from '../../../../core';\nimport type { CSSVariables, MediaQueryVariables } from '../get-variables/get-variables';\nimport type { AppShellProps } from '../../AppShell';\nimport { isResponsiveSize } from '../is-responsive-size/is-responsive-size';\nimport { isPrimitiveSize } from '../is-primitive-size/is-primitive-size';\nimport { getBaseSize } from '../get-base-size/get-base-size';\n\ninterface AssignAsideVariablesInput {\n  baseStyles: CSSVariables;\n  minMediaStyles: MediaQueryVariables;\n  maxMediaStyles: MediaQueryVariables;\n  aside: AppShellProps['aside'] | undefined;\n  theme: MantineTheme;\n}\n\nexport function assignAsideVariables({\n  baseStyles,\n  minMediaStyles,\n  maxMediaStyles,\n  aside,\n  theme,\n}: AssignAsideVariablesInput) {\n  const asideWidth = aside?.width;\n  const collapsedAsideTransform = 'translateX(var(--app-shell-aside-width))';\n  const collapsedAsideTransformRtl = 'translateX(calc(var(--app-shell-aside-width) * -1))';\n\n  if (aside?.breakpoint && !aside?.collapsed?.mobile) {\n    maxMediaStyles[aside?.breakpoint] = maxMediaStyles[aside?.breakpoint] || {};\n    maxMediaStyles[aside?.breakpoint]['--app-shell-aside-width'] = '100%';\n    maxMediaStyles[aside?.breakpoint]['--app-shell-aside-offset'] = '0px';\n  }\n\n  if (isPrimitiveSize(asideWidth)) {\n    const baseSize = rem(getBaseSize(asideWidth));\n    baseStyles['--app-shell-aside-width'] = baseSize;\n    baseStyles['--app-shell-aside-offset'] = baseSize;\n  }\n\n  if (isResponsiveSize(asideWidth)) {\n    if (typeof asideWidth.base !== 'undefined') {\n      baseStyles['--app-shell-aside-width'] = rem(asideWidth.base);\n      baseStyles['--app-shell-aside-offset'] = rem(asideWidth.base);\n    }\n\n    keys(asideWidth).forEach((key) => {\n      if (key !== 'base') {\n        minMediaStyles[key] = minMediaStyles[key] || {};\n        minMediaStyles[key]['--app-shell-aside-width'] = rem(asideWidth![key]);\n        minMediaStyles[key]['--app-shell-aside-offset'] = rem(asideWidth![key]);\n      }\n    });\n  }\n\n  if (aside?.collapsed?.desktop) {\n    const breakpointValue = aside!.breakpoint;\n    minMediaStyles[breakpointValue] = minMediaStyles[breakpointValue] || {};\n    minMediaStyles[breakpointValue]['--app-shell-aside-transform'] = collapsedAsideTransform;\n    minMediaStyles[breakpointValue]['--app-shell-aside-transform-rtl'] = collapsedAsideTransformRtl;\n    minMediaStyles[breakpointValue]['--app-shell-aside-offset'] = '0px !important';\n  }\n\n  if (aside?.collapsed?.mobile) {\n    const breakpointValue = getBreakpointValue(aside!.breakpoint, theme) - 0.1;\n    maxMediaStyles[breakpointValue] = maxMediaStyles[breakpointValue] || {};\n    maxMediaStyles[breakpointValue]['--app-shell-aside-width'] = '100%';\n    maxMediaStyles[breakpointValue]['--app-shell-aside-offset'] = '0px';\n    maxMediaStyles[breakpointValue]['--app-shell-aside-transform'] = collapsedAsideTransform;\n    maxMediaStyles[breakpointValue]['--app-shell-aside-transform-rtl'] = collapsedAsideTransformRtl;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}