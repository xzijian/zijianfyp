{"ast":null,"code":"import { isResponsiveSize } from '../is-responsive-size/is-responsive-size.js';\nimport { isPrimitiveSize } from '../is-primitive-size/is-primitive-size.js';\nimport { getBaseSize } from '../get-base-size/get-base-size.js';\nimport { rem } from '../../../../core/utils/units-converters/rem.js';\nimport { keys } from '../../../../core/utils/keys/keys.js';\nimport { getBreakpointValue } from '../../../../core/utils/get-breakpoint-value/get-breakpoint-value.js';\nfunction assignNavbarVariables(_ref) {\n  let {\n    baseStyles,\n    minMediaStyles,\n    maxMediaStyles,\n    navbar,\n    theme\n  } = _ref;\n  var _a, _b, _c;\n  const navbarWidth = navbar == null ? void 0 : navbar.width;\n  const collapsedNavbarTransform = \"translateX(calc(var(--app-shell-navbar-width) * -1))\";\n  const collapsedNavbarTransformRtl = \"translateX(var(--app-shell-navbar-width))\";\n  if ((navbar == null ? void 0 : navbar.breakpoint) && !((_a = navbar == null ? void 0 : navbar.collapsed) == null ? void 0 : _a.mobile)) {\n    maxMediaStyles[navbar == null ? void 0 : navbar.breakpoint] = maxMediaStyles[navbar == null ? void 0 : navbar.breakpoint] || {};\n    maxMediaStyles[navbar == null ? void 0 : navbar.breakpoint][\"--app-shell-navbar-width\"] = \"100%\";\n    maxMediaStyles[navbar == null ? void 0 : navbar.breakpoint][\"--app-shell-navbar-offset\"] = \"0px\";\n  }\n  if (isPrimitiveSize(navbarWidth)) {\n    const baseSize = rem(getBaseSize(navbarWidth));\n    baseStyles[\"--app-shell-navbar-width\"] = baseSize;\n    baseStyles[\"--app-shell-navbar-offset\"] = baseSize;\n  }\n  if (isResponsiveSize(navbarWidth)) {\n    if (typeof navbarWidth.base !== \"undefined\") {\n      baseStyles[\"--app-shell-navbar-width\"] = rem(navbarWidth.base);\n      baseStyles[\"--app-shell-navbar-offset\"] = rem(navbarWidth.base);\n    }\n    keys(navbarWidth).forEach(key => {\n      if (key !== \"base\") {\n        minMediaStyles[key] = minMediaStyles[key] || {};\n        minMediaStyles[key][\"--app-shell-navbar-width\"] = rem(navbarWidth[key]);\n        minMediaStyles[key][\"--app-shell-navbar-offset\"] = rem(navbarWidth[key]);\n      }\n    });\n  }\n  if ((_b = navbar == null ? void 0 : navbar.collapsed) == null ? void 0 : _b.desktop) {\n    const breakpointValue = navbar.breakpoint;\n    minMediaStyles[breakpointValue] = minMediaStyles[breakpointValue] || {};\n    minMediaStyles[breakpointValue][\"--app-shell-navbar-transform\"] = collapsedNavbarTransform;\n    minMediaStyles[breakpointValue][\"--app-shell-navbar-transform-rtl\"] = collapsedNavbarTransformRtl;\n    minMediaStyles[breakpointValue][\"--app-shell-navbar-offset\"] = \"0px !important\";\n  }\n  if ((_c = navbar == null ? void 0 : navbar.collapsed) == null ? void 0 : _c.mobile) {\n    const breakpointValue = getBreakpointValue(navbar.breakpoint, theme) - 0.1;\n    maxMediaStyles[breakpointValue] = maxMediaStyles[breakpointValue] || {};\n    maxMediaStyles[breakpointValue][\"--app-shell-navbar-width\"] = \"100%\";\n    maxMediaStyles[breakpointValue][\"--app-shell-navbar-offset\"] = \"0px\";\n    maxMediaStyles[breakpointValue][\"--app-shell-navbar-transform\"] = collapsedNavbarTransform;\n    maxMediaStyles[breakpointValue][\"--app-shell-navbar-transform-rtl\"] = collapsedNavbarTransformRtl;\n  }\n}\nexport { assignNavbarVariables };","map":{"version":3,"names":["assignNavbarVariables","_ref","baseStyles","minMediaStyles","maxMediaStyles","navbar","theme","_a","_b","_c","navbarWidth","width","collapsedNavbarTransform","collapsedNavbarTransformRtl","breakpoint","collapsed","mobile","isPrimitiveSize","baseSize","rem","getBaseSize","isResponsiveSize","base","keys","forEach","key","desktop","breakpointValue","getBreakpointValue"],"sources":["/Users/Zijian/Desktop/fypfull/client/node_modules/@mantine/core/src/components/AppShell/AppShellMediaStyles/assign-navbar-variables/assign-navbar-variables.ts"],"sourcesContent":["/* eslint-disable no-param-reassign */\nimport { MantineTheme, keys, rem, getBreakpointValue } from '../../../../core';\nimport type { CSSVariables, MediaQueryVariables } from '../get-variables/get-variables';\nimport type { AppShellProps } from '../../AppShell';\nimport { isResponsiveSize } from '../is-responsive-size/is-responsive-size';\nimport { isPrimitiveSize } from '../is-primitive-size/is-primitive-size';\nimport { getBaseSize } from '../get-base-size/get-base-size';\n\ninterface AssignNavbarVariablesInput {\n  baseStyles: CSSVariables;\n  minMediaStyles: MediaQueryVariables;\n  maxMediaStyles: MediaQueryVariables;\n  navbar: AppShellProps['navbar'] | undefined;\n  theme: MantineTheme;\n}\n\nexport function assignNavbarVariables({\n  baseStyles,\n  minMediaStyles,\n  maxMediaStyles,\n  navbar,\n  theme,\n}: AssignNavbarVariablesInput) {\n  const navbarWidth = navbar?.width;\n  const collapsedNavbarTransform = 'translateX(calc(var(--app-shell-navbar-width) * -1))';\n  const collapsedNavbarTransformRtl = 'translateX(var(--app-shell-navbar-width))';\n\n  if (navbar?.breakpoint && !navbar?.collapsed?.mobile) {\n    maxMediaStyles[navbar?.breakpoint] = maxMediaStyles[navbar?.breakpoint] || {};\n    maxMediaStyles[navbar?.breakpoint]['--app-shell-navbar-width'] = '100%';\n    maxMediaStyles[navbar?.breakpoint]['--app-shell-navbar-offset'] = '0px';\n  }\n\n  if (isPrimitiveSize(navbarWidth)) {\n    const baseSize = rem(getBaseSize(navbarWidth));\n    baseStyles['--app-shell-navbar-width'] = baseSize;\n    baseStyles['--app-shell-navbar-offset'] = baseSize;\n  }\n\n  if (isResponsiveSize(navbarWidth)) {\n    if (typeof navbarWidth.base !== 'undefined') {\n      baseStyles['--app-shell-navbar-width'] = rem(navbarWidth.base);\n      baseStyles['--app-shell-navbar-offset'] = rem(navbarWidth.base);\n    }\n\n    keys(navbarWidth).forEach((key) => {\n      if (key !== 'base') {\n        minMediaStyles[key] = minMediaStyles[key] || {};\n        minMediaStyles[key]['--app-shell-navbar-width'] = rem(navbarWidth![key]);\n        minMediaStyles[key]['--app-shell-navbar-offset'] = rem(navbarWidth![key]);\n      }\n    });\n  }\n\n  if (navbar?.collapsed?.desktop) {\n    const breakpointValue = navbar!.breakpoint;\n    minMediaStyles[breakpointValue] = minMediaStyles[breakpointValue] || {};\n    minMediaStyles[breakpointValue]['--app-shell-navbar-transform'] = collapsedNavbarTransform;\n    minMediaStyles[breakpointValue]['--app-shell-navbar-transform-rtl'] =\n      collapsedNavbarTransformRtl;\n    minMediaStyles[breakpointValue]['--app-shell-navbar-offset'] = '0px !important';\n  }\n\n  if (navbar?.collapsed?.mobile) {\n    const breakpointValue = getBreakpointValue(navbar!.breakpoint, theme) - 0.1;\n    maxMediaStyles[breakpointValue] = maxMediaStyles[breakpointValue] || {};\n    maxMediaStyles[breakpointValue]['--app-shell-navbar-width'] = '100%';\n    maxMediaStyles[breakpointValue]['--app-shell-navbar-offset'] = '0px';\n    maxMediaStyles[breakpointValue]['--app-shell-navbar-transform'] = collapsedNavbarTransform;\n    maxMediaStyles[breakpointValue]['--app-shell-navbar-transform-rtl'] =\n      collapsedNavbarTransformRtl;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}