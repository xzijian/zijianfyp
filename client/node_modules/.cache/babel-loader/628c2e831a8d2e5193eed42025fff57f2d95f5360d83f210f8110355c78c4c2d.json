{"ast":null,"code":"function isHexColor(hex) {\n  const HEX_REGEXP = /^#?([0-9A-F]{3}){1,2}$/i;\n  return HEX_REGEXP.test(hex);\n}\nfunction hexToRgba(color) {\n  let hexString = color.replace(\"#\", \"\");\n  if (hexString.length === 3) {\n    const shorthandHex = hexString.split(\"\");\n    hexString = [shorthandHex[0], shorthandHex[0], shorthandHex[1], shorthandHex[1], shorthandHex[2], shorthandHex[2]].join(\"\");\n  }\n  const parsed = parseInt(hexString, 16);\n  const r = parsed >> 16 & 255;\n  const g = parsed >> 8 & 255;\n  const b = parsed & 255;\n  return {\n    r,\n    g,\n    b,\n    a: 1\n  };\n}\nfunction rgbStringToRgba(color) {\n  const [r, g, b, a] = color.replace(/[^0-9,.]/g, \"\").split(\",\").map(Number);\n  return {\n    r,\n    g,\n    b,\n    a: a || 1\n  };\n}\nfunction hslStringToRgba(hslaString) {\n  const hslaRegex = /^hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+%)\\s*,\\s*(\\d+%)\\s*(,\\s*(0?\\.\\d+|\\d+(\\.\\d+)?))?\\s*\\)$/i;\n  const matches = hslaString.match(hslaRegex);\n  if (!matches) {\n    return {\n      r: 0,\n      g: 0,\n      b: 0,\n      a: 1\n    };\n  }\n  const h = parseInt(matches[1], 10);\n  const s = parseInt(matches[2], 10) / 100;\n  const l = parseInt(matches[3], 10) / 100;\n  const a = matches[5] ? parseFloat(matches[5]) : void 0;\n  const chroma = (1 - Math.abs(2 * l - 1)) * s;\n  const huePrime = h / 60;\n  const x = chroma * (1 - Math.abs(huePrime % 2 - 1));\n  const m = l - chroma / 2;\n  let r;\n  let g;\n  let b;\n  if (huePrime >= 0 && huePrime < 1) {\n    r = chroma;\n    g = x;\n    b = 0;\n  } else if (huePrime >= 1 && huePrime < 2) {\n    r = x;\n    g = chroma;\n    b = 0;\n  } else if (huePrime >= 2 && huePrime < 3) {\n    r = 0;\n    g = chroma;\n    b = x;\n  } else if (huePrime >= 3 && huePrime < 4) {\n    r = 0;\n    g = x;\n    b = chroma;\n  } else if (huePrime >= 4 && huePrime < 5) {\n    r = x;\n    g = 0;\n    b = chroma;\n  } else {\n    r = chroma;\n    g = 0;\n    b = x;\n  }\n  return {\n    r: Math.round((r + m) * 255),\n    g: Math.round((g + m) * 255),\n    b: Math.round((b + m) * 255),\n    a: a || 1\n  };\n}\nfunction toRgba(color) {\n  if (isHexColor(color)) {\n    return hexToRgba(color);\n  }\n  if (color.startsWith(\"rgb\")) {\n    return rgbStringToRgba(color);\n  }\n  if (color.startsWith(\"hsl\")) {\n    return hslStringToRgba(color);\n  }\n  return {\n    r: 0,\n    g: 0,\n    b: 0,\n    a: 1\n  };\n}\nexport { toRgba };","map":{"version":3,"names":["isHexColor","hex","HEX_REGEXP","test","hexToRgba","color","hexString","replace","length","shorthandHex","split","join","parsed","parseInt","r","g","b","a","rgbStringToRgba","map","Number","hslStringToRgba","hslaString","hslaRegex","matches","match","h","s","l","parseFloat","chroma","Math","abs","huePrime","x","m","round","toRgba","startsWith"],"sources":["/Users/Zijian/Desktop/fypfull/client/node_modules/@mantine/core/src/core/MantineProvider/color-functions/to-rgba/to-rgba.ts"],"sourcesContent":["/* eslint-disable no-bitwise */\n\nexport interface RGBA {\n  r: number;\n  g: number;\n  b: number;\n  a: number;\n}\n\nfunction isHexColor(hex: string): boolean {\n  const HEX_REGEXP = /^#?([0-9A-F]{3}){1,2}$/i;\n\n  return HEX_REGEXP.test(hex);\n}\n\nfunction hexToRgba(color: string): RGBA {\n  let hexString = color.replace('#', '');\n\n  if (hexString.length === 3) {\n    const shorthandHex = hexString.split('');\n    hexString = [\n      shorthandHex[0],\n      shorthandHex[0],\n      shorthandHex[1],\n      shorthandHex[1],\n      shorthandHex[2],\n      shorthandHex[2],\n    ].join('');\n  }\n\n  const parsed = parseInt(hexString, 16);\n  const r = (parsed >> 16) & 255;\n  const g = (parsed >> 8) & 255;\n  const b = parsed & 255;\n\n  return {\n    r,\n    g,\n    b,\n    a: 1,\n  };\n}\n\nfunction rgbStringToRgba(color: string): RGBA {\n  const [r, g, b, a] = color\n    .replace(/[^0-9,.]/g, '')\n    .split(',')\n    .map(Number);\n\n  return { r, g, b, a: a || 1 };\n}\n\nfunction hslStringToRgba(hslaString: string): RGBA {\n  const hslaRegex =\n    /^hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+%)\\s*,\\s*(\\d+%)\\s*(,\\s*(0?\\.\\d+|\\d+(\\.\\d+)?))?\\s*\\)$/i;\n\n  const matches = hslaString.match(hslaRegex);\n  if (!matches) {\n    return {\n      r: 0,\n      g: 0,\n      b: 0,\n      a: 1,\n    };\n  }\n\n  const h = parseInt(matches[1], 10);\n  const s = parseInt(matches[2], 10) / 100;\n  const l = parseInt(matches[3], 10) / 100;\n  const a = matches[5] ? parseFloat(matches[5]) : undefined;\n\n  const chroma = (1 - Math.abs(2 * l - 1)) * s;\n  const huePrime = h / 60;\n  const x = chroma * (1 - Math.abs((huePrime % 2) - 1));\n  const m = l - chroma / 2;\n\n  let r: number;\n  let g: number;\n  let b: number;\n\n  if (huePrime >= 0 && huePrime < 1) {\n    r = chroma;\n    g = x;\n    b = 0;\n  } else if (huePrime >= 1 && huePrime < 2) {\n    r = x;\n    g = chroma;\n    b = 0;\n  } else if (huePrime >= 2 && huePrime < 3) {\n    r = 0;\n    g = chroma;\n    b = x;\n  } else if (huePrime >= 3 && huePrime < 4) {\n    r = 0;\n    g = x;\n    b = chroma;\n  } else if (huePrime >= 4 && huePrime < 5) {\n    r = x;\n    g = 0;\n    b = chroma;\n  } else {\n    r = chroma;\n    g = 0;\n    b = x;\n  }\n\n  return {\n    r: Math.round((r + m) * 255),\n    g: Math.round((g + m) * 255),\n    b: Math.round((b + m) * 255),\n    a: a || 1,\n  };\n}\n\nexport function toRgba(color: string): RGBA {\n  if (isHexColor(color)) {\n    return hexToRgba(color);\n  }\n\n  if (color.startsWith('rgb')) {\n    return rgbStringToRgba(color);\n  }\n\n  if (color.startsWith('hsl')) {\n    return hslStringToRgba(color);\n  }\n\n  return {\n    r: 0,\n    g: 0,\n    b: 0,\n    a: 1,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}