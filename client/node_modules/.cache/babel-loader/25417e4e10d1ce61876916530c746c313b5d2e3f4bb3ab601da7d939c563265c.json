{"ast":null,"code":"import { useRef, useEffect, useMemo } from 'react';\nfunction useCallbackRef(callback) {\n  const callbackRef = useRef(callback);\n  useEffect(() => {\n    callbackRef.current = callback;\n  });\n  return useMemo(() => function () {\n    var _a;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return (_a = callbackRef.current) == null ? void 0 : _a.call(callbackRef, ...args);\n  }, []);\n}\nexport { useCallbackRef };","map":{"version":3,"names":["useCallbackRef","callback","callbackRef","useRef","useEffect","current","useMemo","_a","_len","arguments","length","args","Array","_key","call"],"sources":["/Users/Zijian/Desktop/fypfull/client/node_modules/@mantine/hooks/src/use-callback-ref/use-callback-ref.ts"],"sourcesContent":["import { useRef, useEffect, useMemo } from 'react';\n\nexport function useCallbackRef<T extends (...args: any[]) => any>(callback: T | undefined): T {\n  const callbackRef = useRef(callback);\n\n  useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  return useMemo(() => ((...args) => callbackRef.current?.(...args)) as T, []);\n}\n"],"mappings":";AACO,SAASA,cAAcA,CAACC,QAAQ,EAAE;EACvC,MAAMC,WAAW,GAAGC,MAAM,CAACF,QAAQ,CAAC;EACpCG,SAAS,CAAC,MAAM;IACdF,WAAW,CAACG,OAAO,GAAGJ,QAAQ;EAClC,CAAG,CAAC;EACF,OAAOK,OAAO,CAAC,MAAM,YAAa;IAChC,IAAIC,EAAE;IAAC,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EADgBC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAJF,IAAI,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;IAAA;IAE3B,OAAO,CAACN,EAAE,GAAGL,WAAW,CAACG,OAAO,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGE,EAAE,CAACO,IAAI,CAACZ,WAAW,EAAE,GAAGS,IAAI,CAAC;EACtF,CAAG,EAAE,EAAE,CAAC;AACR"},"metadata":{},"sourceType":"module","externalDependencies":[]}